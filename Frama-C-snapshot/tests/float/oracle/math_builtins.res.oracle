[kernel] Parsing tests/float/math_builtins.c (with preprocessing)
[kernel:parser:decimal-float] tests/float/math_builtins.c:248: Warning: 
  Floating-point constant 5.8 is not represented exactly. Will use 0x1.7333333333333p2.
  (warn-once: no further messages from category 'parser:decimal-float' will be emitted)
[eva] Analyzing a complete application starting at main
[eva] Computing initial state
[eva] Initial state computed
[eva:initial-state] Values of globals at initialization
  nondet âˆˆ [--..--]
[eva] computing for function test_cos_det <- main.
  Called from tests/float/math_builtins.c:656.
[eva] tests/float/math_builtins.c:17: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/float/math_builtins.c:17: 
  function cos: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:18: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/float/math_builtins.c:18: 
  function cos: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:19: 
  Call to builtin Frama_C_cos for function cos
[eva] tests/float/math_builtins.c:19: 
  function cos: precondition 'finite_arg' got status valid.
[eva] Recording results for test_cos_det
[eva] Done for function test_cos_det
[eva] computing for function test_sin_det <- main.
  Called from tests/float/math_builtins.c:657.
[eva] tests/float/math_builtins.c:23: 
  Call to builtin Frama_C_sin for function sin
[eva] tests/float/math_builtins.c:23: 
  function sin: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:24: 
  Call to builtin Frama_C_sin for function sin
[eva] tests/float/math_builtins.c:24: 
  function sin: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:25: 
  Call to builtin Frama_C_sin for function sin
[eva] tests/float/math_builtins.c:25: 
  function sin: precondition 'finite_arg' got status valid.
[eva] Recording results for test_sin_det
[eva] Done for function test_sin_det
[eva] computing for function test_atan2_det <- main.
  Called from tests/float/math_builtins.c:658.
[eva] tests/float/math_builtins.c:29: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:29: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:29: 
  function atan2: precondition 'finite_result' got status valid.
[eva] tests/float/math_builtins.c:30: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:30: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:30: 
  function atan2: precondition 'finite_result' got status valid.
[eva] tests/float/math_builtins.c:31: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:31: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:31: 
  function atan2: precondition 'finite_result' got status valid.
[eva] tests/float/math_builtins.c:32: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:32: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:32: 
  function atan2: precondition 'finite_result' got status valid.
[eva] tests/float/math_builtins.c:33: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:33: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:33: 
  function atan2: precondition 'finite_result' got status valid.
[eva] tests/float/math_builtins.c:34: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:34: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:34: 
  function atan2: precondition 'finite_result' got status valid.
[eva] tests/float/math_builtins.c:35: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:35: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:35: 
  function atan2: precondition 'finite_result' got status valid.
[eva] tests/float/math_builtins.c:36: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:36: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:36: 
  function atan2: precondition 'finite_result' got status valid.
[eva] tests/float/math_builtins.c:37: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:37: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:37: 
  function atan2: precondition 'finite_result' got status valid.
[eva] tests/float/math_builtins.c:38: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:38: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:38: 
  function atan2: precondition 'finite_result' got status valid.
[eva] tests/float/math_builtins.c:39: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:39: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:39: 
  function atan2: precondition 'finite_result' got status valid.
[eva] tests/float/math_builtins.c:40: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:40: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:40: 
  function atan2: precondition 'finite_result' got status valid.
[eva] tests/float/math_builtins.c:41: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:41: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:41: 
  function atan2: precondition 'finite_result' got status valid.
[eva] Recording results for test_atan2_det
[eva] Done for function test_atan2_det
[eva] computing for function test_atan2 <- main.
  Called from tests/float/math_builtins.c:659.
[eva] computing for function double_interval <- test_atan2 <- main.
  Called from tests/float/math_builtins.c:46.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_atan2 <- main.
  Called from tests/float/math_builtins.c:47.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:48: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:48: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:48: 
  function atan2: precondition 'finite_result' got status valid.
[eva] computing for function double_interval <- test_atan2 <- main.
  Called from tests/float/math_builtins.c:49.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:50: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:50: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:50: 
  function atan2: precondition 'finite_result' got status valid.
[eva] computing for function double_interval <- test_atan2 <- main.
  Called from tests/float/math_builtins.c:51.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:52: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:52: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:52: 
  function atan2: precondition 'finite_result' got status valid.
[eva] computing for function double_interval <- test_atan2 <- main.
  Called from tests/float/math_builtins.c:53.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:54: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:54: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:54: 
  function atan2: precondition 'finite_result' got status valid.
[eva] computing for function double_interval <- test_atan2 <- main.
  Called from tests/float/math_builtins.c:55.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:56: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:56: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:56: 
  function atan2: precondition 'finite_result' got status valid.
[eva] computing for function double_interval <- test_atan2 <- main.
  Called from tests/float/math_builtins.c:57.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_atan2 <- main.
  Called from tests/float/math_builtins.c:58.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:59: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:59: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:59: 
  function atan2: precondition 'finite_result' got status valid.
[eva] computing for function double_interval <- test_atan2 <- main.
  Called from tests/float/math_builtins.c:60.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:61: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:61: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:61: 
  function atan2: precondition 'finite_result' got status valid.
[eva] computing for function double_interval <- test_atan2 <- main.
  Called from tests/float/math_builtins.c:62.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:63: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:63: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:63: 
  function atan2: precondition 'finite_result' got status valid.
[eva] computing for function double_interval <- test_atan2 <- main.
  Called from tests/float/math_builtins.c:64.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:65: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:65: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:65: 
  function atan2: precondition 'finite_result' got status valid.
[eva] computing for function double_interval <- test_atan2 <- main.
  Called from tests/float/math_builtins.c:66.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:67: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:67: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:67: 
  function atan2: precondition 'finite_result' got status valid.
[eva] tests/float/math_builtins.c:68: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:68: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:68: 
  function atan2: precondition 'finite_result' got status valid.
[eva] tests/float/math_builtins.c:69: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:69: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:69: 
  function atan2: precondition 'finite_result' got status valid.
[eva] tests/float/math_builtins.c:70: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:70: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:70: 
  function atan2: precondition 'finite_result' got status valid.
[eva] tests/float/math_builtins.c:71: 
  Call to builtin Frama_C_atan2 for function atan2
[eva] tests/float/math_builtins.c:71: 
  function atan2: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:71: 
  function atan2: precondition 'finite_result' got status valid.
[eva] Recording results for test_atan2
[eva] Done for function test_atan2
[eva] computing for function test_pow_det <- main.
  Called from tests/float/math_builtins.c:660.
[eva] tests/float/math_builtins.c:75: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:75: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:75: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:76: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:76: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:76: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:77: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:77: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:77: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:78: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:78: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:78: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:79: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:79: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:79: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:80: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:80: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:80: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:81: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:81: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:81: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:82: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:82: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:82: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] Recording results for test_pow_det
[eva] Done for function test_pow_det
[eva] computing for function test_pow_singleton_exp <- main.
  Called from tests/float/math_builtins.c:661.
[eva] computing for function double_interval <- test_pow_singleton_exp <- main.
  Called from tests/float/math_builtins.c:98.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:100: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:100: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:100: Warning: 
  function pow: precondition 'finite_logic_res' got status invalid.
[eva] tests/float/math_builtins.c:102: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:102: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:102: Warning: 
  function pow: precondition 'finite_logic_res' got status invalid.
[eva] computing for function double_interval <- test_pow_singleton_exp <- main.
  Called from tests/float/math_builtins.c:105.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:106: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:106: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:106: Warning: 
  function pow: precondition 'finite_logic_res' got status unknown.
[eva] tests/float/math_builtins.c:107: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:107: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:107: Warning: 
  function pow: precondition 'finite_logic_res' got status unknown.
[eva] tests/float/math_builtins.c:110: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:110: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:110: Warning: 
  function pow: precondition 'finite_logic_res' got status unknown.
[eva] tests/float/math_builtins.c:111: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:111: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:111: Warning: 
  function pow: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_pow_singleton_exp <- main.
  Called from tests/float/math_builtins.c:114.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:115: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:115: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:115: Warning: 
  function pow: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_pow_singleton_exp <- main.
  Called from tests/float/math_builtins.c:116.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:117: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:117: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:117: Warning: 
  function pow: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_pow_singleton_exp <- main.
  Called from tests/float/math_builtins.c:120.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:121: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:121: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:121: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:122: 
  Frama_C_show_each_i: [0.0000000000000000 .. 1.0000000000000000*2^-1000]
[eva] computing for function double_interval <- test_pow_singleton_exp <- main.
  Called from tests/float/math_builtins.c:123.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:124: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:124: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:124: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:125: 
  Frama_C_show_each_j:
  [0.2500000000000000*2^-1022 .. 1.2707064924076672*2^-330]
[eva] tests/float/math_builtins.c:129: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:129: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:129: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:130: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:130: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:130: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] computing for function double_interval <- test_pow_singleton_exp <- main.
  Called from tests/float/math_builtins.c:132.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:133: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:133: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:133: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:134: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:134: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:134: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:135: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:135: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:135: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:136: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:136: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:136: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:137: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:137: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:137: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] computing for function double_interval <- test_pow_singleton_exp <- main.
  Called from tests/float/math_builtins.c:139.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:140: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:140: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:140: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:141: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:141: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:141: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] Recording results for test_pow_singleton_exp
[eva] Done for function test_pow_singleton_exp
[eva] computing for function test_pow <- main.
  Called from tests/float/math_builtins.c:662.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:147.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:148: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:148: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:148: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:149.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:150: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:150: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:150: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:151.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:152: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:152: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:152: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:158.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:159.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:160: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:160: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:160: Warning: 
  function pow: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:161.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:162: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:162: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:162: Warning: 
  function pow: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:163.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:164: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:164: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:164: Warning: 
  function pow: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:165.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:166.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:167: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:167: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:167: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:170.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:171.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:172: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:172: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:172: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:175.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:176.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:177: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:177: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:177: Warning: 
  function pow: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:178.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:179.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:180: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:180: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:180: Warning: 
  function pow: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:184.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:185.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:186: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:186: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:186: Warning: 
  function pow: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:189.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:190.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:191: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:191: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:191: Warning: 
  function pow: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:194.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:195.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:196: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:196: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:196: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:199.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:200.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:201: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:201: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:201: Warning: 
  function pow: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:204.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:205.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:206: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:206: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:206: Warning: 
  function pow: precondition 'finite_logic_res' got status invalid.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:207.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:208: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:208: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:208: Warning: 
  function pow: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:209.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:210: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:210: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:210: Warning: 
  function pow: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:211.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:212: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:212: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:212: Warning: 
  function pow: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:215.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:216.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:217: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:217: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:217: Warning: 
  function pow: precondition 'finite_logic_res' got status invalid.
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:220.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:221.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:222: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:222: 
  function pow: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:222: Warning: 
  function pow: precondition 'finite_logic_res' got status unknown.
[eva] tests/float/math_builtins.c:222: Frama_C_show_each_unreachable:
[eva] computing for function double_interval <- test_pow <- main.
  Called from tests/float/math_builtins.c:224.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:225: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:225: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:225: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] Recording results for test_pow
[eva] Done for function test_pow
[eva] computing for function test_fmod_det <- main.
  Called from tests/float/math_builtins.c:663.
[eva] tests/float/math_builtins.c:335: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:335: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:335: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] tests/float/math_builtins.c:336: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:336: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:336: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] tests/float/math_builtins.c:337: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:337: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:337: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] tests/float/math_builtins.c:338: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:338: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:338: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] tests/float/math_builtins.c:339: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:339: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:339: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] tests/float/math_builtins.c:340: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:340: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:340: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] tests/float/math_builtins.c:341: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:341: 
  function fmod: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:341: Warning: 
  function fmod: precondition 'finite_logic_result' got status invalid.
[eva] Recording results for test_fmod_det
[eva] Done for function test_fmod_det
[eva] computing for function test_fmod <- main.
  Called from tests/float/math_builtins.c:664.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:346.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:347: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:347: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:347: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] tests/float/math_builtins.c:348: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:348: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:348: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] tests/float/math_builtins.c:349: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:349: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:349: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] tests/float/math_builtins.c:350: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:350: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:350: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:351.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:352: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:352: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:352: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] tests/float/math_builtins.c:353: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:353: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:353: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:354.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:355.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:356: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:356: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:356: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:357.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:358.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:359: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:359: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:359: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] tests/float/math_builtins.c:360: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:360: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:360: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:361.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:362.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:363: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:363: 
  function fmod: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:363: Warning: 
  function fmod: precondition 'finite_logic_result' got status unknown.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:364.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:365.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:366: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:366: 
  function fmod: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:366: Warning: 
  function fmod: precondition 'finite_logic_result' got status unknown.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:367.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:368: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:368: 
  function fmod: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:368: Warning: 
  function fmod: precondition 'finite_logic_result' got status invalid.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:369.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:370: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:370: 
  function fmod: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:370: Warning: 
  function fmod: precondition 'finite_logic_result' got status unknown.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:371.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:372: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:372: 
  function fmod: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:372: Warning: 
  function fmod: precondition 'finite_logic_result' got status unknown.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:373.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:374: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:374: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:374: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:375.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:376: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:376: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:376: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:377.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:378: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:378: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:378: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:379.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:380: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:380: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:380: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:381.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:382: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:382: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:382: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:383.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:384: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:384: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:384: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:385.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:386: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:386: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:386: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:387.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:388: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:388: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:388: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:389.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:390.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:391: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:391: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:391: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:392.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:393: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:393: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:393: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:394.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:395: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:395: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:395: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:396.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:397: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:397: 
  function fmod: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:397: 
  function fmod: precondition 'finite_logic_result' got status valid.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:398.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:399.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:400: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:400: 
  function fmod: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:400: Warning: 
  function fmod: precondition 'finite_logic_result' got status unknown.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:401.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:402: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:402: 
  function fmod: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:402: Warning: 
  function fmod: precondition 'finite_logic_result' got status unknown.
[eva] computing for function double_interval <- test_fmod <- main.
  Called from tests/float/math_builtins.c:403.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:404: 
  Call to builtin Frama_C_fmod for function fmod
[eva] tests/float/math_builtins.c:404: 
  function fmod: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:404: Warning: 
  function fmod: precondition 'finite_logic_result' got status unknown.
[eva] Recording results for test_fmod
[eva] Done for function test_fmod
[eva] computing for function test_sqrt_det <- main.
  Called from tests/float/math_builtins.c:665.
[eva] tests/float/math_builtins.c:408: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/float/math_builtins.c:408: 
  function sqrt: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:408: 
  function sqrt: precondition 'arg_positive' got status valid.
[eva] tests/float/math_builtins.c:409: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/float/math_builtins.c:409: 
  function sqrt: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:409: 
  function sqrt: precondition 'arg_positive' got status valid.
[eva] tests/float/math_builtins.c:410: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/float/math_builtins.c:410: 
  function sqrt: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:410: Warning: 
  function sqrt: precondition 'arg_positive' got status invalid.
[eva] tests/float/math_builtins.c:411: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/float/math_builtins.c:411: 
  function sqrt: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:411: 
  function sqrt: precondition 'arg_positive' got status valid.
[eva] tests/float/math_builtins.c:412: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/float/math_builtins.c:412: 
  function sqrt: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:412: 
  function sqrt: precondition 'arg_positive' got status valid.
[eva] Recording results for test_sqrt_det
[eva] Done for function test_sqrt_det
[eva] computing for function test_sqrt <- main.
  Called from tests/float/math_builtins.c:666.
[eva] computing for function double_interval <- test_sqrt <- main.
  Called from tests/float/math_builtins.c:416.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:417: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/float/math_builtins.c:417: 
  function sqrt: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:417: 
  function sqrt: precondition 'arg_positive' got status valid.
[eva] computing for function double_interval <- test_sqrt <- main.
  Called from tests/float/math_builtins.c:418.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:419: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/float/math_builtins.c:419: 
  function sqrt: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:419: Warning: 
  function sqrt: precondition 'arg_positive' got status unknown.
[eva] computing for function double_interval <- test_sqrt <- main.
  Called from tests/float/math_builtins.c:420.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:421: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/float/math_builtins.c:421: 
  function sqrt: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:421: Warning: 
  function sqrt: precondition 'arg_positive' got status unknown.
[eva] computing for function double_interval <- test_sqrt <- main.
  Called from tests/float/math_builtins.c:422.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:423: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/float/math_builtins.c:423: 
  function sqrt: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:423: Warning: 
  function sqrt: precondition 'arg_positive' got status invalid.
[eva] Recording results for test_sqrt
[eva] Done for function test_sqrt
[eva] computing for function test_exp_det <- main.
  Called from tests/float/math_builtins.c:667.
[eva] tests/float/math_builtins.c:446: 
  Call to builtin Frama_C_exp for function exp
[eva] tests/float/math_builtins.c:446: 
  function exp: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:446: 
  function exp: precondition 'finite_domain' got status valid.
[eva] tests/float/math_builtins.c:447: 
  Call to builtin Frama_C_exp for function exp
[eva] tests/float/math_builtins.c:447: 
  function exp: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:447: 
  function exp: precondition 'finite_domain' got status valid.
[eva] tests/float/math_builtins.c:448: 
  Call to builtin Frama_C_exp for function exp
[eva] tests/float/math_builtins.c:448: 
  function exp: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:448: 
  function exp: precondition 'finite_domain' got status valid.
[eva] tests/float/math_builtins.c:449: 
  Call to builtin Frama_C_exp for function exp
[eva] tests/float/math_builtins.c:449: 
  function exp: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:449: 
  function exp: precondition 'finite_domain' got status valid.
[eva] tests/float/math_builtins.c:450: 
  Call to builtin Frama_C_exp for function exp
[eva] tests/float/math_builtins.c:450: 
  function exp: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:450: 
  function exp: precondition 'finite_domain' got status valid.
[eva] tests/float/math_builtins.c:451: 
  Call to builtin Frama_C_exp for function exp
[eva] tests/float/math_builtins.c:451: 
  function exp: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:451: Warning: 
  function exp: precondition 'finite_domain' got status invalid.
[eva] Recording results for test_exp_det
[eva] Done for function test_exp_det
[eva] computing for function test_log_det <- main.
  Called from tests/float/math_builtins.c:668.
[eva] tests/float/math_builtins.c:463: 
  Call to builtin Frama_C_log for function log
[eva] tests/float/math_builtins.c:463: 
  function log: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:463: 
  function log: precondition 'arg_positive' got status valid.
[eva] tests/float/math_builtins.c:464: 
  Call to builtin Frama_C_log for function log
[eva] tests/float/math_builtins.c:464: 
  function log: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:464: 
  function log: precondition 'arg_positive' got status valid.
[eva] tests/float/math_builtins.c:465: 
  Call to builtin Frama_C_log for function log
[eva] tests/float/math_builtins.c:465: 
  function log: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:465: Warning: 
  function log: precondition 'arg_positive' got status invalid.
[eva] tests/float/math_builtins.c:466: 
  Call to builtin Frama_C_log for function log
[eva] tests/float/math_builtins.c:466: 
  function log: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:466: Warning: 
  function log: precondition 'arg_positive' got status invalid.
[eva] tests/float/math_builtins.c:467: 
  Call to builtin Frama_C_log for function log
[eva] tests/float/math_builtins.c:467: 
  function log: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:467: Warning: 
  function log: precondition 'arg_positive' got status invalid.
[eva] tests/float/math_builtins.c:468: 
  Call to builtin Frama_C_log for function log
[eva] tests/float/math_builtins.c:468: 
  function log: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:468: Warning: 
  function log: precondition 'arg_positive' got status invalid.
[eva] Recording results for test_log_det
[eva] Done for function test_log_det
[eva] computing for function test_log10_det <- main.
  Called from tests/float/math_builtins.c:669.
[eva] tests/float/math_builtins.c:481: 
  Call to builtin Frama_C_log10 for function log10
[eva] tests/float/math_builtins.c:481: 
  function log10: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:481: 
  function log10: precondition 'arg_positive' got status valid.
[eva] tests/float/math_builtins.c:482: 
  Call to builtin Frama_C_log10 for function log10
[eva] tests/float/math_builtins.c:482: 
  function log10: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:482: 
  function log10: precondition 'arg_positive' got status valid.
[eva] tests/float/math_builtins.c:483: 
  Call to builtin Frama_C_log10 for function log10
[eva] tests/float/math_builtins.c:483: 
  function log10: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:483: Warning: 
  function log10: precondition 'arg_positive' got status invalid.
[eva] tests/float/math_builtins.c:484: 
  Call to builtin Frama_C_log10 for function log10
[eva] tests/float/math_builtins.c:484: 
  function log10: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:484: Warning: 
  function log10: precondition 'arg_positive' got status invalid.
[eva] tests/float/math_builtins.c:485: 
  Call to builtin Frama_C_log10 for function log10
[eva] tests/float/math_builtins.c:485: 
  function log10: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:485: Warning: 
  function log10: precondition 'arg_positive' got status invalid.
[eva] tests/float/math_builtins.c:486: 
  Call to builtin Frama_C_log10 for function log10
[eva] tests/float/math_builtins.c:486: 
  function log10: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:486: Warning: 
  function log10: precondition 'arg_positive' got status invalid.
[eva] Recording results for test_log10_det
[eva] Done for function test_log10_det
[eva] computing for function test_powf_det <- main.
  Called from tests/float/math_builtins.c:671.
[eva] tests/float/math_builtins.c:86: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:86: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:86: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:87: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:87: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:87: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:88: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:88: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:88: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:89: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:89: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:89: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:90: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:90: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:90: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:91: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:91: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:91: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:92: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:92: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:92: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:93: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:93: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:93: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] Recording results for test_powf_det
[eva] Done for function test_powf_det
[eva] computing for function test_powf_singleton_exp <- main.
  Called from tests/float/math_builtins.c:672.
[eva] computing for function double_interval <- test_powf_singleton_exp <- main.
  Called from tests/float/math_builtins.c:231.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:233: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:233: 
  function powf: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:233: Warning: 
  function powf: precondition 'finite_logic_res' got status invalid.
[eva] tests/float/math_builtins.c:235: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:235: 
  function powf: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:235: Warning: 
  function powf: precondition 'finite_logic_res' got status invalid.
[eva] computing for function double_interval <- test_powf_singleton_exp <- main.
  Called from tests/float/math_builtins.c:238.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:239: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:239: 
  function powf: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:239: Warning: 
  function powf: precondition 'finite_logic_res' got status unknown.
[eva] tests/float/math_builtins.c:240: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:240: 
  function powf: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:240: Warning: 
  function powf: precondition 'finite_logic_res' got status unknown.
[eva] tests/float/math_builtins.c:243: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:243: 
  function powf: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:243: Warning: 
  function powf: precondition 'finite_logic_res' got status unknown.
[eva] tests/float/math_builtins.c:244: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:244: 
  function powf: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:244: Warning: 
  function powf: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_powf_singleton_exp <- main.
  Called from tests/float/math_builtins.c:247.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:248: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:248: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:248: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] computing for function double_interval <- test_powf_singleton_exp <- main.
  Called from tests/float/math_builtins.c:249.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:250: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:250: 
  function powf: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:250: Warning: 
  function powf: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_powf_singleton_exp <- main.
  Called from tests/float/math_builtins.c:253.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:254: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:254: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:254: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:255: 
  Frama_C_show_each_i: [0.0000000000000000 .. 1.0000000000000000*2^-120]
[eva] computing for function double_interval <- test_powf_singleton_exp <- main.
  Called from tests/float/math_builtins.c:256.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:257: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:257: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:257: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:258: Frama_C_show_each_j: {0}
[eva] tests/float/math_builtins.c:262: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:262: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:262: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:263: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:263: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:263: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] computing for function double_interval <- test_powf_singleton_exp <- main.
  Called from tests/float/math_builtins.c:265.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:266: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:266: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:266: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:267: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:267: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:267: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:268: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:268: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:268: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:269: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:269: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:269: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:270: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:270: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:270: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] computing for function double_interval <- test_powf_singleton_exp <- main.
  Called from tests/float/math_builtins.c:272.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:273: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:273: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:273: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:274: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:274: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:274: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] Recording results for test_powf_singleton_exp
[eva] Done for function test_powf_singleton_exp
[eva] computing for function test_powf <- main.
  Called from tests/float/math_builtins.c:673.
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:280.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:281: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:281: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:281: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:282.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:283: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:283: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:283: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:284.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:285: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:285: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:285: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:291.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:292.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:293: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:293: 
  function powf: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:293: Warning: 
  function powf: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:294.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:295: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:295: 
  function powf: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:295: Warning: 
  function powf: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:296.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:297: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:297: 
  function powf: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:297: Warning: 
  function powf: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:298.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:299.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:300: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:300: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:300: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:303.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:304.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:305: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:305: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:305: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:308.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:309.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:310: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:310: 
  function powf: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:310: Warning: 
  function powf: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:313.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:314.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:315: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:315: 
  function powf: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:315: Warning: 
  function powf: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:319.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:320.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:321: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:321: 
  function powf: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:321: Warning: 
  function powf: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:324.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:325.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:326: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:326: 
  function powf: precondition 'finite_args' got status valid.
[eva:alarm] tests/float/math_builtins.c:326: Warning: 
  function powf: precondition 'finite_logic_res' got status unknown.
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:329.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] computing for function double_interval <- test_powf <- main.
  Called from tests/float/math_builtins.c:330.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:331: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:331: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:331: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] Recording results for test_powf
[eva] Done for function test_powf
[eva] computing for function test_sqrtf_det <- main.
  Called from tests/float/math_builtins.c:674.
[eva] tests/float/math_builtins.c:427: 
  Call to builtin Frama_C_sqrtf for function sqrtf
[eva] tests/float/math_builtins.c:427: 
  function sqrtf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:427: 
  function sqrtf: precondition 'arg_positive' got status valid.
[eva] tests/float/math_builtins.c:428: 
  Call to builtin Frama_C_sqrtf for function sqrtf
[eva] tests/float/math_builtins.c:428: 
  function sqrtf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:428: 
  function sqrtf: precondition 'arg_positive' got status valid.
[eva] tests/float/math_builtins.c:429: 
  Call to builtin Frama_C_sqrtf for function sqrtf
[eva] tests/float/math_builtins.c:429: 
  function sqrtf: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:429: Warning: 
  function sqrtf: precondition 'arg_positive' got status invalid.
[eva] tests/float/math_builtins.c:430: 
  Call to builtin Frama_C_sqrtf for function sqrtf
[eva] tests/float/math_builtins.c:430: 
  function sqrtf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:430: 
  function sqrtf: precondition 'arg_positive' got status valid.
[eva] tests/float/math_builtins.c:431: 
  Call to builtin Frama_C_sqrtf for function sqrtf
[eva] tests/float/math_builtins.c:431: 
  function sqrtf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:431: 
  function sqrtf: precondition 'arg_positive' got status valid.
[eva] Recording results for test_sqrtf_det
[eva] Done for function test_sqrtf_det
[eva] computing for function test_sqrtf <- main.
  Called from tests/float/math_builtins.c:675.
[eva] computing for function double_interval <- test_sqrtf <- main.
  Called from tests/float/math_builtins.c:435.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:436: 
  Call to builtin Frama_C_sqrtf for function sqrtf
[eva] tests/float/math_builtins.c:436: 
  function sqrtf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:436: 
  function sqrtf: precondition 'arg_positive' got status valid.
[eva] computing for function double_interval <- test_sqrtf <- main.
  Called from tests/float/math_builtins.c:437.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:438: 
  Call to builtin Frama_C_sqrtf for function sqrtf
[eva] tests/float/math_builtins.c:438: 
  function sqrtf: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:438: Warning: 
  function sqrtf: precondition 'arg_positive' got status unknown.
[eva] computing for function double_interval <- test_sqrtf <- main.
  Called from tests/float/math_builtins.c:439.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:440: 
  Call to builtin Frama_C_sqrtf for function sqrtf
[eva] tests/float/math_builtins.c:440: 
  function sqrtf: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:440: Warning: 
  function sqrtf: precondition 'arg_positive' got status unknown.
[eva] computing for function double_interval <- test_sqrtf <- main.
  Called from tests/float/math_builtins.c:441.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:442: 
  Call to builtin Frama_C_sqrt for function sqrt
[eva] tests/float/math_builtins.c:442: 
  function sqrt: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:442: Warning: 
  function sqrt: precondition 'arg_positive' got status invalid.
[eva] Recording results for test_sqrtf
[eva] Done for function test_sqrtf
[eva] computing for function test_expf_det <- main.
  Called from tests/float/math_builtins.c:676.
[eva] tests/float/math_builtins.c:455: 
  Call to builtin Frama_C_expf for function expf
[eva] tests/float/math_builtins.c:455: 
  function expf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:455: 
  function expf: precondition 'res_finite' got status valid.
[eva] tests/float/math_builtins.c:456: 
  Call to builtin Frama_C_expf for function expf
[eva] tests/float/math_builtins.c:456: 
  function expf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:456: 
  function expf: precondition 'res_finite' got status valid.
[eva] tests/float/math_builtins.c:457: 
  Call to builtin Frama_C_expf for function expf
[eva] tests/float/math_builtins.c:457: 
  function expf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:457: 
  function expf: precondition 'res_finite' got status valid.
[eva] tests/float/math_builtins.c:458: 
  Call to builtin Frama_C_expf for function expf
[eva] tests/float/math_builtins.c:458: 
  function expf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:458: 
  function expf: precondition 'res_finite' got status valid.
[eva] tests/float/math_builtins.c:459: 
  Call to builtin Frama_C_expf for function expf
[eva] tests/float/math_builtins.c:459: 
  function expf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:459: 
  function expf: precondition 'res_finite' got status valid.
[eva] Recording results for test_expf_det
[eva] Done for function test_expf_det
[eva] computing for function test_logf_det <- main.
  Called from tests/float/math_builtins.c:677.
[eva] tests/float/math_builtins.c:472: 
  Call to builtin Frama_C_logf for function logf
[eva] tests/float/math_builtins.c:472: 
  function logf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:472: 
  function logf: precondition 'arg_positive' got status valid.
[eva] tests/float/math_builtins.c:473: 
  Call to builtin Frama_C_logf for function logf
[eva] tests/float/math_builtins.c:473: 
  function logf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:473: 
  function logf: precondition 'arg_positive' got status valid.
[eva] tests/float/math_builtins.c:474: 
  Call to builtin Frama_C_logf for function logf
[eva] tests/float/math_builtins.c:474: 
  function logf: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:474: Warning: 
  function logf: precondition 'arg_positive' got status invalid.
[eva] tests/float/math_builtins.c:475: 
  Call to builtin Frama_C_logf for function logf
[eva] tests/float/math_builtins.c:475: 
  function logf: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:475: Warning: 
  function logf: precondition 'arg_positive' got status invalid.
[eva] tests/float/math_builtins.c:476: 
  Call to builtin Frama_C_logf for function logf
[eva] tests/float/math_builtins.c:476: 
  function logf: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:476: Warning: 
  function logf: precondition 'arg_positive' got status invalid.
[eva] tests/float/math_builtins.c:477: 
  Call to builtin Frama_C_logf for function logf
[eva] tests/float/math_builtins.c:477: 
  function logf: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:477: Warning: 
  function logf: precondition 'arg_positive' got status invalid.
[eva] Recording results for test_logf_det
[eva] Done for function test_logf_det
[eva] computing for function test_log10f_det <- main.
  Called from tests/float/math_builtins.c:678.
[eva] tests/float/math_builtins.c:490: 
  Call to builtin Frama_C_log10f for function log10f
[eva] tests/float/math_builtins.c:490: 
  function log10f: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:490: 
  function log10f: precondition 'arg_positive' got status valid.
[eva] tests/float/math_builtins.c:491: 
  Call to builtin Frama_C_log10f for function log10f
[eva] tests/float/math_builtins.c:491: 
  function log10f: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:491: 
  function log10f: precondition 'arg_positive' got status valid.
[eva] tests/float/math_builtins.c:492: 
  Call to builtin Frama_C_log10f for function log10f
[eva] tests/float/math_builtins.c:492: 
  function log10f: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:492: Warning: 
  function log10f: precondition 'arg_positive' got status invalid.
[eva] tests/float/math_builtins.c:493: 
  Call to builtin Frama_C_log10f for function log10f
[eva] tests/float/math_builtins.c:493: 
  function log10f: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:493: Warning: 
  function log10f: precondition 'arg_positive' got status invalid.
[eva] tests/float/math_builtins.c:494: 
  Call to builtin Frama_C_log10f for function log10f
[eva] tests/float/math_builtins.c:494: 
  function log10f: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:494: Warning: 
  function log10f: precondition 'arg_positive' got status invalid.
[eva] tests/float/math_builtins.c:495: 
  Call to builtin Frama_C_log10f for function log10f
[eva] tests/float/math_builtins.c:495: 
  function log10f: precondition 'finite_arg' got status valid.
[eva:alarm] tests/float/math_builtins.c:495: Warning: 
  function log10f: precondition 'arg_positive' got status invalid.
[eva] Recording results for test_log10f_det
[eva] Done for function test_log10f_det
[eva] computing for function test_diff_pow_powf <- main.
  Called from tests/float/math_builtins.c:680.
[eva] tests/float/math_builtins.c:499: 
  Call to builtin Frama_C_pow for function pow
[eva] tests/float/math_builtins.c:499: 
  function pow: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:499: 
  function pow: precondition 'finite_logic_res' got status valid.
[eva] tests/float/math_builtins.c:500: 
  Call to builtin Frama_C_powf for function powf
[eva] tests/float/math_builtins.c:500: 
  function powf: precondition 'finite_args' got status valid.
[eva] tests/float/math_builtins.c:500: 
  function powf: precondition 'finite_logic_res' got status valid.
[eva] Recording results for test_diff_pow_powf
[eva] Done for function test_diff_pow_powf
[eva] computing for function test_floor_det <- main.
  Called from tests/float/math_builtins.c:682.
[eva] tests/float/math_builtins.c:504: 
  Call to builtin Frama_C_floor for function floor
[eva] tests/float/math_builtins.c:504: 
  function floor: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:505: 
  Call to builtin Frama_C_floor for function floor
[eva] tests/float/math_builtins.c:505: 
  function floor: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:506: 
  Call to builtin Frama_C_floor for function floor
[eva] tests/float/math_builtins.c:506: 
  function floor: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:507: 
  Call to builtin Frama_C_floor for function floor
[eva] tests/float/math_builtins.c:507: 
  function floor: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:508: 
  Call to builtin Frama_C_floor for function floor
[eva] tests/float/math_builtins.c:508: 
  function floor: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:509: 
  Call to builtin Frama_C_floor for function floor
[eva] tests/float/math_builtins.c:509: 
  function floor: precondition 'finite_arg' got status valid.
[eva] Recording results for test_floor_det
[eva] Done for function test_floor_det
[eva] computing for function test_ceil_det <- main.
  Called from tests/float/math_builtins.c:683.
[eva] tests/float/math_builtins.c:513: 
  Call to builtin Frama_C_ceil for function ceil
[eva] tests/float/math_builtins.c:513: 
  function ceil: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:514: 
  Call to builtin Frama_C_ceil for function ceil
[eva] tests/float/math_builtins.c:514: 
  function ceil: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:515: 
  Call to builtin Frama_C_ceil for function ceil
[eva] tests/float/math_builtins.c:515: 
  function ceil: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:516: 
  Call to builtin Frama_C_ceil for function ceil
[eva] tests/float/math_builtins.c:516: 
  function ceil: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:517: 
  Call to builtin Frama_C_ceil for function ceil
[eva] tests/float/math_builtins.c:517: 
  function ceil: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:518: 
  Call to builtin Frama_C_ceil for function ceil
[eva] tests/float/math_builtins.c:518: 
  function ceil: precondition 'finite_arg' got status valid.
[eva] Recording results for test_ceil_det
[eva] Done for function test_ceil_det
[eva] computing for function test_trunc_det <- main.
  Called from tests/float/math_builtins.c:684.
[eva] tests/float/math_builtins.c:522: 
  Call to builtin Frama_C_trunc for function trunc
[eva] tests/float/math_builtins.c:522: 
  function trunc: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:523: 
  Call to builtin Frama_C_trunc for function trunc
[eva] tests/float/math_builtins.c:523: 
  function trunc: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:524: 
  Call to builtin Frama_C_trunc for function trunc
[eva] tests/float/math_builtins.c:524: 
  function trunc: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:525: 
  Call to builtin Frama_C_trunc for function trunc
[eva] tests/float/math_builtins.c:525: 
  function trunc: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:526: 
  Call to builtin Frama_C_trunc for function trunc
[eva] tests/float/math_builtins.c:526: 
  function trunc: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:527: 
  Call to builtin Frama_C_trunc for function trunc
[eva] tests/float/math_builtins.c:527: 
  function trunc: precondition 'finite_arg' got status valid.
[eva] Recording results for test_trunc_det
[eva] Done for function test_trunc_det
[eva] computing for function test_round_det <- main.
  Called from tests/float/math_builtins.c:685.
[eva] tests/float/math_builtins.c:531: 
  Call to builtin Frama_C_round for function round
[eva] tests/float/math_builtins.c:531: 
  function round: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:532: 
  Call to builtin Frama_C_round for function round
[eva] tests/float/math_builtins.c:532: 
  function round: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:533: 
  Call to builtin Frama_C_round for function round
[eva] tests/float/math_builtins.c:533: 
  function round: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:534: 
  Call to builtin Frama_C_round for function round
[eva] tests/float/math_builtins.c:534: 
  function round: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:535: 
  Call to builtin Frama_C_round for function round
[eva] tests/float/math_builtins.c:535: 
  function round: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:536: 
  Call to builtin Frama_C_round for function round
[eva] tests/float/math_builtins.c:536: 
  function round: precondition 'finite_arg' got status valid.
[eva] Recording results for test_round_det
[eva] Done for function test_round_det
[eva] computing for function test_floor <- main.
  Called from tests/float/math_builtins.c:686.
[eva] computing for function double_interval <- test_floor <- main.
  Called from tests/float/math_builtins.c:541.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:542: 
  Call to builtin Frama_C_floor for function floor
[eva] tests/float/math_builtins.c:542: 
  function floor: precondition 'finite_arg' got status valid.
[eva] computing for function double_interval <- test_floor <- main.
  Called from tests/float/math_builtins.c:543.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:544: 
  Call to builtin Frama_C_floor for function floor
[eva] tests/float/math_builtins.c:544: 
  function floor: precondition 'finite_arg' got status valid.
[eva] computing for function double_interval <- test_floor <- main.
  Called from tests/float/math_builtins.c:545.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:546: 
  Call to builtin Frama_C_floor for function floor
[eva] tests/float/math_builtins.c:546: 
  function floor: precondition 'finite_arg' got status valid.
[eva] Recording results for test_floor
[eva] Done for function test_floor
[eva] computing for function test_ceil <- main.
  Called from tests/float/math_builtins.c:687.
[eva] computing for function double_interval <- test_ceil <- main.
  Called from tests/float/math_builtins.c:551.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:552: 
  Call to builtin Frama_C_ceil for function ceil
[eva] tests/float/math_builtins.c:552: 
  function ceil: precondition 'finite_arg' got status valid.
[eva] computing for function double_interval <- test_ceil <- main.
  Called from tests/float/math_builtins.c:553.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:554: 
  Call to builtin Frama_C_ceil for function ceil
[eva] tests/float/math_builtins.c:554: 
  function ceil: precondition 'finite_arg' got status valid.
[eva] computing for function double_interval <- test_ceil <- main.
  Called from tests/float/math_builtins.c:555.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:556: 
  Call to builtin Frama_C_ceil for function ceil
[eva] tests/float/math_builtins.c:556: 
  function ceil: precondition 'finite_arg' got status valid.
[eva] Recording results for test_ceil
[eva] Done for function test_ceil
[eva] computing for function test_trunc <- main.
  Called from tests/float/math_builtins.c:688.
[eva] computing for function double_interval <- test_trunc <- main.
  Called from tests/float/math_builtins.c:561.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:562: 
  Call to builtin Frama_C_trunc for function trunc
[eva] tests/float/math_builtins.c:562: 
  function trunc: precondition 'finite_arg' got status valid.
[eva] computing for function double_interval <- test_trunc <- main.
  Called from tests/float/math_builtins.c:563.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:564: 
  Call to builtin Frama_C_trunc for function trunc
[eva] tests/float/math_builtins.c:564: 
  function trunc: precondition 'finite_arg' got status valid.
[eva] computing for function double_interval <- test_trunc <- main.
  Called from tests/float/math_builtins.c:565.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:566: 
  Call to builtin Frama_C_trunc for function trunc
[eva] tests/float/math_builtins.c:566: 
  function trunc: precondition 'finite_arg' got status valid.
[eva] Recording results for test_trunc
[eva] Done for function test_trunc
[eva] computing for function test_round <- main.
  Called from tests/float/math_builtins.c:689.
[eva] computing for function double_interval <- test_round <- main.
  Called from tests/float/math_builtins.c:571.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:572: 
  Call to builtin Frama_C_round for function round
[eva] tests/float/math_builtins.c:572: 
  function round: precondition 'finite_arg' got status valid.
[eva] computing for function double_interval <- test_round <- main.
  Called from tests/float/math_builtins.c:573.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:574: 
  Call to builtin Frama_C_round for function round
[eva] tests/float/math_builtins.c:574: 
  function round: precondition 'finite_arg' got status valid.
[eva] computing for function double_interval <- test_round <- main.
  Called from tests/float/math_builtins.c:575.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:576: 
  Call to builtin Frama_C_round for function round
[eva] tests/float/math_builtins.c:576: 
  function round: precondition 'finite_arg' got status valid.
[eva] Recording results for test_round
[eva] Done for function test_round
[eva] computing for function test_floorf_det <- main.
  Called from tests/float/math_builtins.c:691.
[eva] tests/float/math_builtins.c:580: 
  Call to builtin Frama_C_floorf for function floorf
[eva] tests/float/math_builtins.c:580: 
  function floorf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:581: 
  Call to builtin Frama_C_floorf for function floorf
[eva] tests/float/math_builtins.c:581: 
  function floorf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:582: 
  Call to builtin Frama_C_floorf for function floorf
[eva] tests/float/math_builtins.c:582: 
  function floorf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:583: 
  Call to builtin Frama_C_floorf for function floorf
[eva] tests/float/math_builtins.c:583: 
  function floorf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:584: 
  Call to builtin Frama_C_floorf for function floorf
[eva] tests/float/math_builtins.c:584: 
  function floorf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:585: 
  Call to builtin Frama_C_floorf for function floorf
[eva] tests/float/math_builtins.c:585: 
  function floorf: precondition 'finite_arg' got status valid.
[eva] Recording results for test_floorf_det
[eva] Done for function test_floorf_det
[eva] computing for function test_ceilf_det <- main.
  Called from tests/float/math_builtins.c:692.
[eva] tests/float/math_builtins.c:589: 
  Call to builtin Frama_C_ceilf for function ceilf
[eva] tests/float/math_builtins.c:589: 
  function ceilf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:590: 
  Call to builtin Frama_C_ceilf for function ceilf
[eva] tests/float/math_builtins.c:590: 
  function ceilf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:591: 
  Call to builtin Frama_C_ceilf for function ceilf
[eva] tests/float/math_builtins.c:591: 
  function ceilf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:592: 
  Call to builtin Frama_C_ceilf for function ceilf
[eva] tests/float/math_builtins.c:592: 
  function ceilf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:593: 
  Call to builtin Frama_C_ceilf for function ceilf
[eva] tests/float/math_builtins.c:593: 
  function ceilf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:594: 
  Call to builtin Frama_C_ceilf for function ceilf
[eva] tests/float/math_builtins.c:594: 
  function ceilf: precondition 'finite_arg' got status valid.
[eva] Recording results for test_ceilf_det
[eva] Done for function test_ceilf_det
[eva] computing for function test_truncf_det <- main.
  Called from tests/float/math_builtins.c:693.
[eva] tests/float/math_builtins.c:598: 
  Call to builtin Frama_C_truncf for function truncf
[eva] tests/float/math_builtins.c:598: 
  function truncf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:599: 
  Call to builtin Frama_C_truncf for function truncf
[eva] tests/float/math_builtins.c:599: 
  function truncf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:600: 
  Call to builtin Frama_C_truncf for function truncf
[eva] tests/float/math_builtins.c:600: 
  function truncf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:601: 
  Call to builtin Frama_C_truncf for function truncf
[eva] tests/float/math_builtins.c:601: 
  function truncf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:602: 
  Call to builtin Frama_C_truncf for function truncf
[eva] tests/float/math_builtins.c:602: 
  function truncf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:603: 
  Call to builtin Frama_C_truncf for function truncf
[eva] tests/float/math_builtins.c:603: 
  function truncf: precondition 'finite_arg' got status valid.
[eva] Recording results for test_truncf_det
[eva] Done for function test_truncf_det
[eva] computing for function test_roundf_det <- main.
  Called from tests/float/math_builtins.c:694.
[eva] tests/float/math_builtins.c:607: 
  Call to builtin Frama_C_roundf for function roundf
[eva] tests/float/math_builtins.c:607: 
  function roundf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:608: 
  Call to builtin Frama_C_roundf for function roundf
[eva] tests/float/math_builtins.c:608: 
  function roundf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:609: 
  Call to builtin Frama_C_roundf for function roundf
[eva] tests/float/math_builtins.c:609: 
  function roundf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:610: 
  Call to builtin Frama_C_roundf for function roundf
[eva] tests/float/math_builtins.c:610: 
  function roundf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:611: 
  Call to builtin Frama_C_roundf for function roundf
[eva] tests/float/math_builtins.c:611: 
  function roundf: precondition 'finite_arg' got status valid.
[eva] tests/float/math_builtins.c:612: 
  Call to builtin Frama_C_roundf for function roundf
[eva] tests/float/math_builtins.c:612: 
  function roundf: precondition 'finite_arg' got status valid.
[eva] Recording results for test_roundf_det
[eva] Done for function test_roundf_det
[eva] computing for function test_floorf <- main.
  Called from tests/float/math_builtins.c:695.
[eva] computing for function double_interval <- test_floorf <- main.
  Called from tests/float/math_builtins.c:617.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:618: 
  Call to builtin Frama_C_floorf for function floorf
[eva] tests/float/math_builtins.c:618: 
  function floorf: precondition 'finite_arg' got status valid.
[eva] computing for function double_interval <- test_floorf <- main.
  Called from tests/float/math_builtins.c:619.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:620: 
  Call to builtin Frama_C_floorf for function floorf
[eva] tests/float/math_builtins.c:620: 
  function floorf: precondition 'finite_arg' got status valid.
[eva] computing for function double_interval <- test_floorf <- main.
  Called from tests/float/math_builtins.c:621.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:622: 
  Call to builtin Frama_C_floorf for function floorf
[eva] tests/float/math_builtins.c:622: 
  function floorf: precondition 'finite_arg' got status valid.
[eva] Recording results for test_floorf
[eva] Done for function test_floorf
[eva] computing for function test_ceilf <- main.
  Called from tests/float/math_builtins.c:696.
[eva] computing for function double_interval <- test_ceilf <- main.
  Called from tests/float/math_builtins.c:627.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:628: 
  Call to builtin Frama_C_ceilf for function ceilf
[eva] tests/float/math_builtins.c:628: 
  function ceilf: precondition 'finite_arg' got status valid.
[eva] computing for function double_interval <- test_ceilf <- main.
  Called from tests/float/math_builtins.c:629.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:630: 
  Call to builtin Frama_C_ceilf for function ceilf
[eva] tests/float/math_builtins.c:630: 
  function ceilf: precondition 'finite_arg' got status valid.
[eva] computing for function double_interval <- test_ceilf <- main.
  Called from tests/float/math_builtins.c:631.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:632: 
  Call to builtin Frama_C_ceilf for function ceilf
[eva] tests/float/math_builtins.c:632: 
  function ceilf: precondition 'finite_arg' got status valid.
[eva] Recording results for test_ceilf
[eva] Done for function test_ceilf
[eva] computing for function test_truncf <- main.
  Called from tests/float/math_builtins.c:697.
[eva] computing for function double_interval <- test_truncf <- main.
  Called from tests/float/math_builtins.c:637.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:638: 
  Call to builtin Frama_C_truncf for function truncf
[eva] tests/float/math_builtins.c:638: 
  function truncf: precondition 'finite_arg' got status valid.
[eva] computing for function double_interval <- test_truncf <- main.
  Called from tests/float/math_builtins.c:639.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:640: 
  Call to builtin Frama_C_truncf for function truncf
[eva] tests/float/math_builtins.c:640: 
  function truncf: precondition 'finite_arg' got status valid.
[eva] computing for function double_interval <- test_truncf <- main.
  Called from tests/float/math_builtins.c:641.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:642: 
  Call to builtin Frama_C_truncf for function truncf
[eva] tests/float/math_builtins.c:642: 
  function truncf: precondition 'finite_arg' got status valid.
[eva] Recording results for test_truncf
[eva] Done for function test_truncf
[eva] computing for function test_roundf <- main.
  Called from tests/float/math_builtins.c:698.
[eva] computing for function double_interval <- test_roundf <- main.
  Called from tests/float/math_builtins.c:647.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:648: 
  Call to builtin Frama_C_roundf for function roundf
[eva] tests/float/math_builtins.c:648: 
  function roundf: precondition 'finite_arg' got status valid.
[eva] computing for function double_interval <- test_roundf <- main.
  Called from tests/float/math_builtins.c:649.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:650: 
  Call to builtin Frama_C_roundf for function roundf
[eva] tests/float/math_builtins.c:650: 
  function roundf: precondition 'finite_arg' got status valid.
[eva] computing for function double_interval <- test_roundf <- main.
  Called from tests/float/math_builtins.c:651.
[eva] Recording results for double_interval
[eva] Done for function double_interval
[eva] tests/float/math_builtins.c:652: 
  Call to builtin Frama_C_roundf for function roundf
[eva] tests/float/math_builtins.c:652: 
  function roundf: precondition 'finite_arg' got status valid.
[eva] Recording results for test_roundf
[eva] Done for function test_roundf
[eva] Recording results for main
[eva] done for function main
[eva] ====== VALUES COMPUTED ======
[eva:final-states] Values at end of function double_interval:
  __retres âˆˆ [-1.2237906221789607*2^1023 .. 1.2237906221789607*2^1023]
[eva:final-states] Values at end of function test_atan2:
  x âˆˆ [1.0000000000000000 .. 5.0000000000000000]
  y âˆˆ [-0.0000000000000000 .. 0.0000000000000000]
  a âˆˆ [1.5999166744782948*2^-7 .. 1.5582969777755348]
  b âˆˆ [1.3325625311548295*2^-5 .. 3.0916342578678506]
  c âˆˆ [-2.9441970937399126 .. -1.3211894193170146*2^-3]
  d âˆˆ [-2.9764439761751662 .. -2.6779450445889869]
  e âˆˆ {-1.5707963267948965}
  f âˆˆ [-1.5707963267948965*2^-1 .. -0.0000000000000000]
  g âˆˆ [0.0000000000000000 .. 1.8545904360032243*2^-2]
  h âˆˆ [-3.1415929794311523 .. 3.1415929794311523]
  i âˆˆ [-3.1415929794311523 .. 3.1415929794311523]
  j âˆˆ [-3.1415929794311523 .. 3.1415929794311523]
  k âˆˆ {0}
  l âˆˆ {-0.0000000000000000}
  m âˆˆ {3.1415926535897931}
  n âˆˆ {-3.1415926535897931}
[eva:final-states] Values at end of function test_atan2_det:
  a âˆˆ {1.5707963267948965}
  b âˆˆ {0}
  c âˆˆ {1.5707963267948965}
  d âˆˆ {-0.0000000000000000}
  e âˆˆ {-1.5707963267948965}
  f âˆˆ {-1.5707963267948965}
  g âˆˆ {-1.5707963267948965}
  h âˆˆ {-1.5707963267948965}
  i âˆˆ {0}
  j âˆˆ {1.1071487177940904}
  k âˆˆ {-1.1071487177940904}
  l âˆˆ {2.0344439357957027}
  m âˆˆ {-2.0344439357957027}
[eva:final-states] Values at end of function test_ceil:
  x âˆˆ [-2.5000000000000000 .. -1.0000000000000000*2^-1]
  a âˆˆ [-0.0000000000000000 .. 2.0000000000000000]
  b âˆˆ [-0.0000000000000000 .. 1.0000000000000000]
  c âˆˆ [-2.0000000000000000 .. -0.0000000000000000]
[eva:final-states] Values at end of function test_ceil_det:
  a âˆˆ {2.0000000000000000}
  b âˆˆ {1.0000000000000000}
  c âˆˆ {0}
  d âˆˆ {-0.0000000000000000}
  e âˆˆ {-0.0000000000000000}
  f âˆˆ {-1.0000000000000000}
[eva:final-states] Values at end of function test_ceilf:
  f32__x âˆˆ [-2.500000 .. -1.000000*2^-1]
  f32__a âˆˆ [-0.000000 .. 2.000000]
  f32__b âˆˆ [-0.000000 .. 1.000000]
  f32__c âˆˆ [-2.000000 .. -0.000000]
[eva:final-states] Values at end of function test_ceilf_det:
  f32__a âˆˆ {2.000000}
  f32__b âˆˆ {1.000000}
  f32__c âˆˆ {0}
  f32__d âˆˆ {-0.000000}
  f32__e âˆˆ {-0.000000}
  f32__f âˆˆ {-1.000000}
[eva:final-states] Values at end of function test_cos_det:
  x âˆˆ {1.0806046117362795*2^-1}
  y âˆˆ {1.0000000000000000}
  z âˆˆ {1.0806046117362795*2^-1}
[eva:final-states] Values at end of function test_diff_pow_powf:
  d âˆˆ {1.3824840787361052*2^-96}
  f32__f âˆˆ {1.382483*2^-96}
[eva:final-states] Values at end of function test_exp_det:
  a âˆˆ {1.7094457008275896*2^60}
  b âˆˆ {1.0826822658929016*2^-3}
  c âˆˆ {1.0000000000000000}
  d âˆˆ {1.0000000000000000}
  e âˆˆ {1.4715177646857693*2^-2}
[eva:final-states] Values at end of function test_expf_det:
  f32__a âˆˆ {1.709445*2^60}
  f32__b âˆˆ {1.082682*2^-3}
  f32__c âˆˆ {1.000000}
  f32__d âˆˆ {1.000000}
  f32__e âˆˆ {1.471517*2^-2}
[eva:final-states] Values at end of function test_floor:
  x âˆˆ [-2.5000000000000000 .. -1.0000000000000000*2^-1]
  a âˆˆ [-1.0000000000000000 .. 1.0000000000000000]
  b âˆˆ [-0.0000000000000000 .. 0.0000000000000000]
  c âˆˆ [-3.0000000000000000 .. -1.0000000000000000]
[eva:final-states] Values at end of function test_floor_det:
  a âˆˆ {1.0000000000000000}
  b âˆˆ {0}
  c âˆˆ {0}
  d âˆˆ {-0.0000000000000000}
  e âˆˆ {-1.0000000000000000}
  f âˆˆ {-2.0000000000000000}
[eva:final-states] Values at end of function test_floorf:
  f32__x âˆˆ [-2.500000 .. -1.000000*2^-1]
  f32__a âˆˆ [-1.000000 .. 1.000000]
  f32__b âˆˆ [-0.000000 .. 0.000000]
  f32__c âˆˆ [-3.000000 .. -1.000000]
[eva:final-states] Values at end of function test_floorf_det:
  f32__a âˆˆ {1.000000}
  f32__b âˆˆ {0}
  f32__c âˆˆ {0}
  f32__d âˆˆ {-0.000000}
  f32__e âˆˆ {-1.000000}
  f32__f âˆˆ {-2.000000}
[eva:final-states] Values at end of function test_fmod:
  x âˆˆ [-3.0000000000000000 .. 2.0000000000000000]
  y âˆˆ [-4.0000000000000000 .. 5.0000000000000000]
  a âˆˆ [0.0000000000000000 .. 1.4999999999999998]
  b âˆˆ [0.0000000000000000 .. 1.4999999999999998]
  c âˆˆ [-1.4999999999999998 .. -0.0000000000000000]
  d âˆˆ [-1.4999999999999998 .. -0.0000000000000000]
  e âˆˆ [1.5000000000000000*2^-1 .. 1.2500000000000000]
  f âˆˆ [1.5000000000000000*2^-1 .. 1.2500000000000000]
  g âˆˆ [4.0000000000000000 .. 5.5000000000000000]
  h âˆˆ [0.0000000000000000 .. 5.4999999999999991]
  i âˆˆ [0.0000000000000000 .. 5.4999999999999991]
  j âˆˆ [-4.4999999999999991 .. 4.4999999999999991]
  k âˆˆ [-2.0000000000000000 .. 4.5000000000000000]
  l âˆˆ [-1.9999999999999998*2^-4 .. 1.9999999999999998*2^-4]
  m âˆˆ [-1.9999999999999998*2^-4 .. 1.9999999999999998*2^-4]
  n âˆˆ [0.0000000000000000 .. 1.9999999999999998*2^-10]
  o âˆˆ [-1.9999999999999998*2^-10 .. -0.0000000000000000]
  p âˆˆ [0.0000000000000000 .. 1.9999999999999998*2^-10]
  q âˆˆ [1.5000000000000000*2^-14 .. 1.0000000000000000*2^-11]
  r âˆˆ [0.0000000000000000 .. 1.0000025599999997*2^-9]
  s âˆˆ [0.0000000000000000 .. 1.5999999999999998*2^-4]
  t âˆˆ [-1.5999999999999998*2^-4 .. -0.0000000000000000]
  u âˆˆ [-3.9999999999999996 .. -0.0000000000000000]
  v1 âˆˆ [1.0000000000000000 .. 3.0000000000000000]
  v2 âˆˆ [1.0000000000000000 .. 3.0000000000000000]
  v3 âˆˆ [-3.0000000000000000 .. -1.0000000000000000]
  v4 âˆˆ [-3.0000000000000000 .. -1.0000000000000000]
  w1 âˆˆ [0.0000000000000000 .. 3.0000000000000000]
  w2 âˆˆ [-2.0000000000000000 .. 3.0000000000000000]
  w3 âˆˆ [-3.0000000000000000 .. 2.0000000000000000]
[eva:final-states] Values at end of function test_fmod_det:
  a âˆˆ {1.7500000000000000}
  b âˆˆ {-1.7500000000000000}
  c âˆˆ {-0.0000000000000000}
  d âˆˆ {0}
  e âˆˆ {0}
  f âˆˆ {0}
[eva:final-states] Values at end of function test_log10_det:
  a âˆˆ {1.6245399138793950}
  b âˆˆ {-1.8061799739838871*2^-1}
[eva:final-states] Values at end of function test_log10f_det:
  f32__a âˆˆ {1.624539}
  f32__b âˆˆ {-1.806180*2^-1}
[eva:final-states] Values at end of function test_log_det:
  a âˆˆ {3.7406413886725258}
  b âˆˆ {-2.0794415416798357}
[eva:final-states] Values at end of function test_logf_det:
  f32__a âˆˆ {3.740641}
  f32__b âˆˆ {-2.079441}
[eva:final-states] Values at end of function test_pow:
  x âˆˆ [-1.4551915228366852*2^36 .. -1.1641532182693481*2^33]
  y âˆˆ [-1.0000000000000000*2^-1 .. 9.5000000000000000]
  a âˆˆ {1.0000000000000000}
  b âˆˆ {1.0000000000000000}
  c âˆˆ {1.0000000000000000}
  d âˆˆ [0.0000000000000000 .. 327.9450894181683225]
  e âˆˆ [-64.0000000000000000 .. 1.1259101122907695*2^14]
  f âˆˆ [-64.0000000000000000 .. 421.8750000000000000]
  g âˆˆ [1.7652004904783322*2^-3 .. 4.7568284600108841]
  h âˆˆ [1.4142135623730951*2^-3 .. 1.7469281074217106]
  i âˆˆ [-1.9999999999999998*2^1023 .. 1.9999999999999998*2^1023]
  j âˆˆ [-1.0000000000000000 .. 1.9999999999999998*2^1023]
  k âˆˆ [-1.4163703918457031*2^18 .. 1.4036245608028963*2^52]
  l âˆˆ [-1024.0000000000000000 .. 256.0000000000000000]
  m âˆˆ [-0.0000000000000000 .. 1.5258789062500000*2^16]
  n âˆˆ [1.0362151436839746*2^-15 .. 1.9999999999999998*2^1023]
  o âˆˆ {1.0000000000000000}
  p âˆˆ [-1.4551915228366852*2^25 .. 1.1641532182693481*2^23]
  q âˆˆ [-1.9999999999999998*2^1023 .. 1.9999999999999998*2^1023]
  r âˆˆ [1.2649110640673517*2^-2 .. 1.4725502860585131*2^31]
[eva:final-states] Values at end of function test_pow_det:
  a âˆˆ {1.0000000000000000}
  b âˆˆ {0}
  c âˆˆ {1.0000000000000000}
  d âˆˆ {1.2247448713915889}
  e âˆˆ {3.6539061185009513}
  f âˆˆ {1.1857484052378015*2^-2}
  g âˆˆ {1.6817928305074290*2^-21}
  h âˆˆ {1.0000000000000000}
[eva:final-states] Values at end of function test_pow_singleton_exp:
  x âˆˆ [-3.5000000000000000 .. -1.0000000000000000*2^-3]
  c âˆˆ [0.0000000000000000 .. 4.5603590867386749]
  d âˆˆ [1.7542478229978975*2^-3 .. 1.9999999999999998*2^1023]
  e âˆˆ [-1.9999999999999998*2^1023 .. 1.9999999999999998*2^1023]
  f âˆˆ [1.3061224489795917*2^-4 .. 1.9999999999999998*2^1023]
  g âˆˆ [1.0000000000000000*2^975 .. 1.9999999999999998*2^1023]
  h âˆˆ [-1.9999999999999998*2^1023 .. -1.3699635576194850*2^-10]
  i âˆˆ [0.0000000000000000 .. 1.0000000000000000*2^-1000]
  j âˆˆ [0.2500000000000000*2^-1022 .. 1.2707064924076672*2^-330]
  k âˆˆ [1.7469281074217106 .. 5.6568542494923805]
  l âˆˆ [2.1836601342771384 .. 11.3137084989847611]
  m âˆˆ [1.3196114778086369*2^-5 .. 22.6274169979695223]
  n âˆˆ [1.9097831327702532*2^-4 .. 8.0000000000000000]
  o âˆˆ [1.4142135623730951*2^-1 .. 1.4251349413858991]
  p âˆˆ [1.6817928305074290*2^-4 .. 10.0014719999210708]
  q âˆˆ [1.0000000000000000*2^-8 .. 289.5314941406250000]
  r âˆˆ [1.3061224489795917*2^-4 .. 64.0000000000000000]
  s âˆˆ [-8.0000000000000000 .. -1.1428571428571428*2^-2]
[eva:final-states] Values at end of function test_powf:
  f32__x âˆˆ [-0.000000 .. 10.000000]
  f32__y âˆˆ [-0.000000 .. 5.000000]
  f32__a âˆˆ {1.000000}
  f32__b âˆˆ {1.000000}
  f32__c âˆˆ {1.000000}
  f32__d âˆˆ [0.000000 .. 327.945098]
  f32__e âˆˆ [-64.000000 .. 1.125910*2^14]
  f32__f âˆˆ [-64.000000 .. 421.875000]
  f32__g âˆˆ [1.765200*2^-3 .. 4.756828]
  f32__h âˆˆ [1.414213*2^-3 .. 1.746928]
  f32__i âˆˆ [-1.999999*2^127 .. 1.999999*2^127]
  f32__j âˆˆ [-1.000000 .. 1.999999*2^127]
  f32__k âˆˆ [-1.416370*2^18 .. 1.403624*2^52]
  f32__l âˆˆ [-1024.000000 .. 256.000000]
  f32__m âˆˆ [-0.000000 .. 1.525878*2^16]
[eva:final-states] Values at end of function test_powf_det:
  f32__a âˆˆ {1.000000}
  f32__b âˆˆ {0}
  f32__c âˆˆ {1.000000}
  f32__d âˆˆ {1.224744}
  f32__e âˆˆ {3.653906}
  f32__f âˆˆ {1.185748*2^-2}
  f32__g âˆˆ {1.681792*2^-21}
  f32__h âˆˆ {1.000000}
[eva:final-states] Values at end of function test_powf_singleton_exp:
  f32__x âˆˆ [-3.500000 .. -1.000000*2^-3]
  f32__c âˆˆ [0.000000 .. 4.560359]
  f32__d âˆˆ [1.754247*2^-3 .. 1.999999*2^127]
  f32__e âˆˆ [-1.999999*2^127 .. 1.999999*2^127]
  f32__f âˆˆ [1.306122*2^-4 .. 1.999999*2^127]
  f32__g âˆˆ [1.000002*2^116 .. 1.741105*2^121]
  f32__h âˆˆ [-1.999999*2^127 .. -1.369963*2^-10]
  f32__i âˆˆ [0.000000 .. 1.000000*2^-120]
  f32__j âˆˆ {0}
  f32__k âˆˆ [1.746928 .. 5.656854]
  f32__l âˆˆ [2.183660 .. 11.313708]
  f32__m âˆˆ [1.319611*2^-5 .. 22.627416]
  f32__n âˆˆ [1.909783*2^-4 .. 8.000000]
  f32__o âˆˆ [1.414213*2^-1 .. 1.425134]
  f32__p âˆˆ [1.681792*2^-4 .. 10.001472]
  f32__q âˆˆ [1.000000*2^-8 .. 289.531494]
  f32__r âˆˆ [1.306122*2^-4 .. 64.000000]
  f32__s âˆˆ [-8.000000 .. -1.142857*2^-2]
[eva:final-states] Values at end of function test_round:
  x âˆˆ [-2.5000000000000000 .. -1.0000000000000000*2^-1]
  a âˆˆ [-1.0000000000000000 .. 2.0000000000000000]
  b âˆˆ [-0.0000000000000000 .. 1.0000000000000000]
  c âˆˆ [-3.0000000000000000 .. -1.0000000000000000]
[eva:final-states] Values at end of function test_round_det:
  a âˆˆ {2.0000000000000000}
  b âˆˆ {1.0000000000000000}
  c âˆˆ {0}
  d âˆˆ {-0.0000000000000000}
  e âˆˆ {-1.0000000000000000}
  f âˆˆ {-2.0000000000000000}
[eva:final-states] Values at end of function test_roundf:
  f32__x âˆˆ [-2.500000 .. -1.000000*2^-1]
  f32__a âˆˆ [-1.000000 .. 2.000000]
  f32__b âˆˆ [-0.000000 .. 1.000000]
  f32__c âˆˆ [-3.000000 .. -1.000000]
[eva:final-states] Values at end of function test_roundf_det:
  f32__a âˆˆ {2.000000}
  f32__b âˆˆ {1.000000}
  f32__c âˆˆ {0}
  f32__d âˆˆ {-0.000000}
  f32__e âˆˆ {-1.000000}
  f32__f âˆˆ {-2.000000}
[eva:final-states] Values at end of function test_sin_det:
  x âˆˆ {1.6829419696157930*2^-1}
  y âˆˆ {0}
  z âˆˆ {-1.6829419696157930*2^-1}
[eva:final-states] Values at end of function test_sqrt:
  x âˆˆ [-6.5000000000000000 .. -1.6000000000000000*2^-4]
  a âˆˆ [-0.0000000000000000 .. 2.2360679774997898]
  b âˆˆ [-0.0000000000000000 .. 0.0000000000000000]
  c âˆˆ {-0.0000000000000000}
[eva:final-states] Values at end of function test_sqrt_det:
  a âˆˆ {6.4903774928735851}
  b âˆˆ {1.4142135623730951*2^-2}
  c âˆˆ {0}
  d âˆˆ {-0.0000000000000000}
[eva:final-states] Values at end of function test_sqrtf:
  f32__x âˆˆ [-6.500000 .. -1.600000*2^-4]
  f32__a âˆˆ [-0.000000 .. 2.236068]
  b âˆˆ [-0.0000000000000000 .. 0.0000000000000000]
  c âˆˆ {-0.0000000000000000}
[eva:final-states] Values at end of function test_sqrtf_det:
  f32__a âˆˆ {6.490377}
  f32__b âˆˆ {1.414213*2^-2}
  f32__c âˆˆ {0}
  f32__d âˆˆ {-0.000000}
[eva:final-states] Values at end of function test_trunc:
  x âˆˆ [-2.5000000000000000 .. -1.0000000000000000*2^-1]
  a âˆˆ [-0.0000000000000000 .. 1.0000000000000000]
  b âˆˆ [-0.0000000000000000 .. 0.0000000000000000]
  c âˆˆ [-2.0000000000000000 .. -0.0000000000000000]
[eva:final-states] Values at end of function test_trunc_det:
  a âˆˆ {1.0000000000000000}
  b âˆˆ {0}
  c âˆˆ {0}
  d âˆˆ {-0.0000000000000000}
  e âˆˆ {-0.0000000000000000}
  f âˆˆ {-1.0000000000000000}
[eva:final-states] Values at end of function test_truncf:
  f32__x âˆˆ [-2.500000 .. -1.000000*2^-1]
  f32__a âˆˆ [-0.000000 .. 1.000000]
  f32__b âˆˆ [-0.000000 .. 0.000000]
  f32__c âˆˆ [-2.000000 .. -0.000000]
[eva:final-states] Values at end of function test_truncf_det:
  f32__a âˆˆ {1.000000}
  f32__b âˆˆ {0}
  f32__c âˆˆ {0}
  f32__d âˆˆ {-0.000000}
  f32__e âˆˆ {-0.000000}
  f32__f âˆˆ {-1.000000}
[eva:final-states] Values at end of function main:
  __retres âˆˆ {0}
[from] Computing for function double_interval
[from] Done for function double_interval
[from] Computing for function test_atan2
[from] Computing for function atan2 <-test_atan2
[from] Done for function atan2
[from] Done for function test_atan2
[from] Computing for function test_atan2_det
[from] Done for function test_atan2_det
[from] Computing for function test_ceil
[from] Computing for function ceil <-test_ceil
[from] Done for function ceil
[from] Done for function test_ceil
[from] Computing for function test_ceil_det
[from] Done for function test_ceil_det
[from] Computing for function test_ceilf
[from] Computing for function ceilf <-test_ceilf
[from] Done for function ceilf
[from] Done for function test_ceilf
[from] Computing for function test_ceilf_det
[from] Done for function test_ceilf_det
[from] Computing for function test_cos_det
[from] Computing for function cos <-test_cos_det
[from] Done for function cos
[from] Done for function test_cos_det
[from] Computing for function test_diff_pow_powf
[from] Computing for function pow <-test_diff_pow_powf
[from] Done for function pow
[from] Computing for function powf <-test_diff_pow_powf
[from] Done for function powf
[from] Done for function test_diff_pow_powf
[from] Computing for function test_exp_det
[from] Computing for function exp <-test_exp_det
[from] Done for function exp
[from] Done for function test_exp_det
[from] Computing for function test_expf_det
[from] Computing for function expf <-test_expf_det
[from] Done for function expf
[from] Done for function test_expf_det
[from] Computing for function test_floor
[from] Computing for function floor <-test_floor
[from] Done for function floor
[from] Done for function test_floor
[from] Computing for function test_floor_det
[from] Done for function test_floor_det
[from] Computing for function test_floorf
[from] Computing for function floorf <-test_floorf
[from] Done for function floorf
[from] Done for function test_floorf
[from] Computing for function test_floorf_det
[from] Done for function test_floorf_det
[from] Computing for function test_fmod
[from] Computing for function fmod <-test_fmod
[from] Done for function fmod
[from] Done for function test_fmod
[from] Computing for function test_fmod_det
[from] Done for function test_fmod_det
[from] Computing for function test_log10_det
[from] Computing for function log10 <-test_log10_det
[from] Done for function log10
[from] Done for function test_log10_det
[from] Computing for function test_log10f_det
[from] Computing for function log10f <-test_log10f_det
[from] Done for function log10f
[from] Done for function test_log10f_det
[from] Computing for function test_log_det
[from] Computing for function log <-test_log_det
[from] Done for function log
[from] Done for function test_log_det
[from] Computing for function test_logf_det
[from] Computing for function logf <-test_logf_det
[from] Done for function logf
[from] Done for function test_logf_det
[from] Computing for function test_pow
[from] Done for function test_pow
[from] Computing for function test_pow_det
[from] Done for function test_pow_det
[from] Computing for function test_pow_singleton_exp
[from] Done for function test_pow_singleton_exp
[from] Computing for function test_powf
[from] Done for function test_powf
[from] Computing for function test_powf_det
[from] Done for function test_powf_det
[from] Computing for function test_powf_singleton_exp
[from] Done for function test_powf_singleton_exp
[from] Computing for function test_round
[from] Computing for function round <-test_round
[from] Done for function round
[from] Done for function test_round
[from] Computing for function test_round_det
[from] Done for function test_round_det
[from] Computing for function test_roundf
[from] Computing for function roundf <-test_roundf
[from] Done for function roundf
[from] Done for function test_roundf
[from] Computing for function test_roundf_det
[from] Done for function test_roundf_det
[from] Computing for function test_sin_det
[from] Computing for function sin <-test_sin_det
[from] Done for function sin
[from] Done for function test_sin_det
[from] Computing for function test_sqrt
[from] Computing for function sqrt <-test_sqrt
[from] Done for function sqrt
[from] Done for function test_sqrt
[from] Computing for function test_sqrt_det
[from] Done for function test_sqrt_det
[from] Computing for function test_sqrtf
[from] Computing for function sqrtf <-test_sqrtf
[from] Done for function sqrtf
[from] Done for function test_sqrtf
[from] Computing for function test_sqrtf_det
[from] Done for function test_sqrtf_det
[from] Computing for function test_trunc
[from] Computing for function trunc <-test_trunc
[from] Done for function trunc
[from] Done for function test_trunc
[from] Computing for function test_trunc_det
[from] Done for function test_trunc_det
[from] Computing for function test_truncf
[from] Computing for function truncf <-test_truncf
[from] Done for function truncf
[from] Done for function test_truncf
[from] Computing for function test_truncf_det
[from] Done for function test_truncf_det
[from] Computing for function main
[from] Done for function main
[from] ====== DEPENDENCIES COMPUTED ======
  These dependencies hold at termination for the executions that terminate:
[from] Function atan2:
  \result FROM y; x
[from] Function ceil:
  \result FROM x
[from] Function ceilf:
  \result FROM x
[from] Function cos:
  \result FROM x
[from] Function double_interval:
  \result FROM min; max; nondet
[from] Function exp:
  \result FROM x
[from] Function expf:
  \result FROM x
[from] Function floor:
  \result FROM x
[from] Function floorf:
  \result FROM x
[from] Function fmod:
  \result FROM x; y
[from] Function log:
  \result FROM x
[from] Function log10:
  \result FROM x
[from] Function log10f:
  \result FROM x
[from] Function logf:
  \result FROM x
[from] Function pow:
  \result FROM x; y
[from] Function powf:
  \result FROM x; y
[from] Function round:
  \result FROM x
[from] Function roundf:
  \result FROM x
[from] Function sin:
  \result FROM x
[from] Function sqrt:
  \result FROM x
[from] Function sqrtf:
  \result FROM x
[from] Function test_atan2:
  NO EFFECTS
[from] Function test_atan2_det:
  NO EFFECTS
[from] Function test_ceil:
  NO EFFECTS
[from] Function test_ceil_det:
  NO EFFECTS
[from] Function test_ceilf:
  NO EFFECTS
[from] Function test_ceilf_det:
  NO EFFECTS
[from] Function test_cos_det:
  NO EFFECTS
[from] Function test_diff_pow_powf:
  NO EFFECTS
[from] Function test_exp_det:
  NO EFFECTS
[from] Function test_expf_det:
  NO EFFECTS
[from] Function test_floor:
  NO EFFECTS
[from] Function test_floor_det:
  NO EFFECTS
[from] Function test_floorf:
  NO EFFECTS
[from] Function test_floorf_det:
  NO EFFECTS
[from] Function test_fmod:
  NO EFFECTS
[from] Function test_fmod_det:
  NO EFFECTS
[from] Function test_log10_det:
  NO EFFECTS
[from] Function test_log10f_det:
  NO EFFECTS
[from] Function test_log_det:
  NO EFFECTS
[from] Function test_logf_det:
  NO EFFECTS
[from] Function test_pow:
  NO EFFECTS
[from] Function test_pow_det:
  NO EFFECTS
[from] Function test_pow_singleton_exp:
  NO EFFECTS
[from] Function test_powf:
  NO EFFECTS
[from] Function test_powf_det:
  NO EFFECTS
[from] Function test_powf_singleton_exp:
  NO EFFECTS
[from] Function test_round:
  NO EFFECTS
[from] Function test_round_det:
  NO EFFECTS
[from] Function test_roundf:
  NO EFFECTS
[from] Function test_roundf_det:
  NO EFFECTS
[from] Function test_sin_det:
  NO EFFECTS
[from] Function test_sqrt:
  NO EFFECTS
[from] Function test_sqrt_det:
  NO EFFECTS
[from] Function test_sqrtf:
  NO EFFECTS
[from] Function test_sqrtf_det:
  NO EFFECTS
[from] Function trunc:
  \result FROM x
[from] Function test_trunc:
  NO EFFECTS
[from] Function test_trunc_det:
  NO EFFECTS
[from] Function truncf:
  \result FROM x
[from] Function test_truncf:
  NO EFFECTS
[from] Function test_truncf_det:
  NO EFFECTS
[from] Function main:
  \result FROM \nothing
[from] ====== END OF DEPENDENCIES ======
[inout] Out (internal) for function double_interval:
    __retres
[inout] Inputs for function double_interval:
    nondet
[inout] Out (internal) for function test_atan2:
    x; y; a; b; c; d; e; f; g; h; i; j; k; l; m; n
[inout] Inputs for function test_atan2:
    nondet
[inout] Out (internal) for function test_atan2_det:
    a; b; c; d; e; f; g; h; i; j; k; l; m
[inout] Inputs for function test_atan2_det:
    \nothing
[inout] Out (internal) for function test_ceil:
    x; a; b; c
[inout] Inputs for function test_ceil:
    nondet
[inout] Out (internal) for function test_ceil_det:
    a; b; c; d; e; f
[inout] Inputs for function test_ceil_det:
    \nothing
[inout] Out (internal) for function test_ceilf:
    f32__x; tmp; f32__a; tmp_1; f32__b; tmp_3; f32__c
[inout] Inputs for function test_ceilf:
    nondet
[inout] Out (internal) for function test_ceilf_det:
    f32__a; f32__b; f32__c; f32__d; f32__e; f32__f
[inout] Inputs for function test_ceilf_det:
    \nothing
[inout] Out (internal) for function test_cos_det:
    x; y; z
[inout] Inputs for function test_cos_det:
    \nothing
[inout] Out (internal) for function test_diff_pow_powf:
    d; f32__f
[inout] Inputs for function test_diff_pow_powf:
    \nothing
[inout] Out (internal) for function test_exp_det:
    a; b; c; d; e
[inout] Inputs for function test_exp_det:
    nondet
[inout] Out (internal) for function test_expf_det:
    f32__a; f32__b; f32__c; f32__d; f32__e
[inout] Inputs for function test_expf_det:
    \nothing
[inout] Out (internal) for function test_floor:
    x; a; b; c
[inout] Inputs for function test_floor:
    nondet
[inout] Out (internal) for function test_floor_det:
    a; b; c; d; e; f
[inout] Inputs for function test_floor_det:
    \nothing
[inout] Out (internal) for function test_floorf:
    f32__x; tmp; f32__a; tmp_1; f32__b; tmp_3; f32__c
[inout] Inputs for function test_floorf:
    nondet
[inout] Out (internal) for function test_floorf_det:
    f32__a; f32__b; f32__c; f32__d; f32__e; f32__f
[inout] Inputs for function test_floorf_det:
    \nothing
[inout] Out (internal) for function test_fmod:
    x; y; a; b; c; d; e; f; g; h; i; j; k; l; m; n; o; p; q; r; s; tmp_18; 
    t; u; v1; v2; v3; v4; w1; w2; w3
[inout] Inputs for function test_fmod:
    nondet
[inout] Out (internal) for function test_fmod_det:
    a; b; c; d; e; f
[inout] Inputs for function test_fmod_det:
    nondet
[inout] Out (internal) for function test_log10_det:
    a; b
[inout] Inputs for function test_log10_det:
    nondet
[inout] Out (internal) for function test_log10f_det:
    f32__a; f32__b
[inout] Inputs for function test_log10f_det:
    nondet
[inout] Out (internal) for function test_log_det:
    a; b
[inout] Inputs for function test_log_det:
    nondet
[inout] Out (internal) for function test_logf_det:
    f32__a; f32__b
[inout] Inputs for function test_logf_det:
    nondet
[inout] Out (internal) for function test_pow:
    x; y; a; b; c; d; e; f; g; h; i; j; k; l; m; n; o; p; q; r
[inout] Inputs for function test_pow:
    nondet
[inout] Out (internal) for function test_pow_det:
    a; b; c; d; e; f; g; h
[inout] Inputs for function test_pow_det:
    \nothing
[inout] Out (internal) for function test_pow_singleton_exp:
    x; c; d; e; f; g; h; i; j; k; l; m; n; o; p; q; r; s
[inout] Inputs for function test_pow_singleton_exp:
    nondet
[inout] Out (internal) for function test_powf:
    f32__x; f32__y; tmp; f32__a; tmp_1; f32__b; tmp_3; f32__c; tmp_5; tmp_6;
    f32__d; tmp_8; f32__e; tmp_10; f32__f; tmp_12; tmp_13; f32__g; tmp_15;
    tmp_16; f32__h; tmp_18; tmp_19; f32__i; tmp_21; tmp_22; f32__j; tmp_24;
    tmp_25; f32__k; tmp_27; tmp_28; f32__l; tmp_30; tmp_31; f32__m
[inout] Inputs for function test_powf:
    nondet
[inout] Out (internal) for function test_powf_det:
    f32__a; f32__b; f32__c; f32__d; f32__e; f32__f; f32__g; f32__h
[inout] Inputs for function test_powf_det:
    \nothing
[inout] Out (internal) for function test_powf_singleton_exp:
    f32__x; tmp; tmp_0; f32__c; f32__d; f32__e; f32__f; tmp_5; f32__g; 
    tmp_7; f32__h; tmp_9; f32__i; tmp_11; f32__j; f32__k; f32__l; tmp_15;
    f32__m; f32__n; f32__o; f32__p; f32__q; tmp_21; f32__r; f32__s
[inout] Inputs for function test_powf_singleton_exp:
    nondet
[inout] Out (internal) for function test_round:
    x; a; b; c
[inout] Inputs for function test_round:
    nondet
[inout] Out (internal) for function test_round_det:
    a; b; c; d; e; f
[inout] Inputs for function test_round_det:
    \nothing
[inout] Out (internal) for function test_roundf:
    f32__x; tmp; f32__a; tmp_1; f32__b; tmp_3; f32__c
[inout] Inputs for function test_roundf:
    nondet
[inout] Out (internal) for function test_roundf_det:
    f32__a; f32__b; f32__c; f32__d; f32__e; f32__f
[inout] Inputs for function test_roundf_det:
    \nothing
[inout] Out (internal) for function test_sin_det:
    x; y; z
[inout] Inputs for function test_sin_det:
    \nothing
[inout] Out (internal) for function test_sqrt:
    x; a; b; c
[inout] Inputs for function test_sqrt:
    nondet
[inout] Out (internal) for function test_sqrt_det:
    a; b; c; d
[inout] Inputs for function test_sqrt_det:
    nondet
[inout] Out (internal) for function test_sqrtf:
    f32__x; tmp; f32__a; tmp_1; b; tmp_3; c; tmp_5
[inout] Inputs for function test_sqrtf:
    nondet
[inout] Out (internal) for function test_sqrtf_det:
    f32__a; f32__b; f32__c; f32__d
[inout] Inputs for function test_sqrtf_det:
    nondet
[inout] Out (internal) for function test_trunc:
    x; a; b; c
[inout] Inputs for function test_trunc:
    nondet
[inout] Out (internal) for function test_trunc_det:
    a; b; c; d; e; f
[inout] Inputs for function test_trunc_det:
    \nothing
[inout] Out (internal) for function test_truncf:
    f32__x; tmp; f32__a; tmp_1; f32__b; tmp_3; f32__c
[inout] Inputs for function test_truncf:
    nondet
[inout] Out (internal) for function test_truncf_det:
    f32__a; f32__b; f32__c; f32__d; f32__e; f32__f
[inout] Inputs for function test_truncf_det:
    \nothing
[inout] Out (internal) for function main:
    __retres
[inout] Inputs for function main:
    nondet
/* Generated by Frama-C */
#include "errno.h"
#include "math.h"
static int volatile nondet;
double double_interval(double min, double max)
{
  double __retres;
  if (nondet) {
    __retres = min;
    goto return_label;
  }
  else {
    __retres = max;
    goto return_label;
  }
  return_label: return __retres;
}

void test_cos_det(void)
{
  double x = cos(1.);
  double y = cos(0.);
  double z = cos(- 1.);
  return;
}

void test_sin_det(void)
{
  double x = sin(1.);
  double y = sin(0.);
  double z = sin(- 1.);
  return;
}

void test_atan2_det(void)
{
  double a = atan2(1.,0.);
  double b = atan2(0.,1.);
  double c = atan2(1.,- 0.);
  double d = atan2(- 0.,1.);
  double e = atan2(- 1.,0.);
  double f = atan2(- 1.,0.);
  double g = atan2(- 1.,- 0.);
  double h = atan2(- 1.,- 0.);
  double i = atan2(0.,0.);
  double j = atan2(2.,1.);
  double k = atan2(- 2.,1.);
  double l = atan2(2.,- 1.);
  double m = atan2(- 2.,- 1.);
  return;
}

void test_atan2(void)
{
  double x;
  double y;
  y = double_interval(0.125,10.);
  x = double_interval(0.125,10.);
  double a = atan2(y,x);
  x = double_interval(- 2.5,3.);
  double b = atan2(y,x);
  y = double_interval(- 1.25,- 0.5);
  double c = atan2(y,x);
  x = double_interval(- 3.,- 2.5);
  double d = atan2(y,x);
  x = double_interval(- 0.,0.);
  double e = atan2(y,x);
  x = double_interval(1.,5.);
  y = double_interval(- 1.,- 0.);
  double f = atan2(y,x);
  y = double_interval(0.,0.5);
  double g = atan2(y,x);
  y = double_interval(- 0.,0.5);
  double h = atan2(y,x);
  y = double_interval(- 0.5,0.);
  double i = atan2(y,x);
  y = double_interval(- 0.,0.);
  double j = atan2(y,x);
  double k = atan2(0.,x);
  double l = atan2(- 0.,x);
  double m = atan2(0.,- x);
  double n = atan2(- 0.,- x);
  return;
}

void test_pow_det(void)
{
  double a = pow(1.,8.);
  double b = pow(0.,1.);
  double c = pow(12.,0.);
  double d = pow(2.25,0.25);
  double e = pow(178.25,0.25);
  double f = pow(129.5,- 0.25);
  double g = pow(512.,- 2.25);
  double h = pow(0.,0.);
  return;
}

void test_powf_det(void)
{
  float f32__a = powf((float)1.,(float)8.);
  float f32__b = powf((float)0.,(float)1.);
  float f32__c = powf((float)12.,(float)0.);
  float f32__d = powf((float)2.25,(float)0.25);
  float f32__e = powf((float)178.25,(float)0.25);
  float f32__f = powf((float)129.5,(float)(- 0.25));
  float f32__g = powf((float)512.,(float)(- 2.25));
  float f32__h = powf((float)0.,(float)0.);
  return;
}

/*@ assigns \result;
    assigns \result \from \nothing; */
extern int ( /* missing proto */ Frama_C_show_each_unreachable)();

/*@ assigns \result;
    assigns \result \from \nothing; */
extern int ( /* missing proto */ Frama_C_show_each_i)();

/*@ assigns \result;
    assigns \result \from \nothing; */
extern int ( /* missing proto */ Frama_C_show_each_j)();

void test_pow_singleton_exp(void)
{
  double x;
  x = double_interval(- 3.5,- 2.75);
  if (nondet) {
    pow(x,1.5);
    Frama_C_show_each_unreachable();
  }
  if (nondet) {
    pow(x,- 1.5);
    Frama_C_show_each_unreachable();
  }
  x = double_interval(- 3.5,2.75);
  double c = pow(x,1.5);
  double d = pow(x,- 1.5);
  double e = pow(x,- 3.);
  double f = pow(x,- 2.);
  x = double_interval((double)(1LL << 50),(double)(1LL << 62));
  double g = pow(x,19.5);
  x = double_interval((double)(- (1LL << 49)),- .75);
  double h = pow(x,23.0);
  x = double_interval(0.125,0.25);
  double i = pow(x,500.);
  Frama_C_show_each_i(i);
  x = double_interval(1.25,2.0);
  double j = pow(x,- 1024.);
  Frama_C_show_each_j(j);
  double k = pow(x,2.5);
  double l = pow(x,3.5);
  x = double_interval(0.25,4.125);
  double m = pow(x,- 2.25);
  double n = pow(x,- 1.5);
  double o = pow(x,0.25);
  double p = pow(x,1.625);
  double q = pow(x,4.);
  x = double_interval(- 3.5,- 0.125);
  double r = pow(x,- 2.);
  double s = pow(x,- 1.);
  return;
}

void test_pow(void)
{
  double x;
  double y;
  y = double_interval(- 18.5,12.125);
  double a = pow(1.0,y);
  x = double_interval(- 15.25,32.75);
  double b = pow(x,0.0);
  y = double_interval(- 0.0,0.0);
  double c = pow(x,y);
  x = double_interval(- 4.0,7.5);
  y = double_interval(2.125,2.875);
  double d = pow(x,y);
  y = double_interval(2.125,4.875);
  double e = pow(x,y);
  y = double_interval(2.0,3.0);
  double f = pow(x,y);
  y = double_interval(- 0.75,- 0.);
  x = double_interval(0.125,7.5);
  double g = pow(x,y);
  y = double_interval(0.25,2.5);
  x = double_interval(0.5,1.25);
  double h = pow(x,y);
  x = double_interval(- 1.0,1.0);
  y = double_interval(- 1.0,1.0);
  double i = pow(x,y);
  x = double_interval(- 1.0,1.0);
  y = double_interval(- 0.5,1.0);
  double j = pow(x,y);
  x = double_interval(- 13.,430.);
  y = double_interval(3.,6.);
  double k = pow(x,y);
  x = double_interval(- 4.,- 2.);
  y = double_interval(3.,5.);
  double l = pow(x,y);
  x = double_interval(- 0.,10.);
  y = double_interval(- 0.,5.);
  double m = pow(x,y);
  x = double_interval(- 0.0,10.0);
  y = double_interval(- 4.5,- 3.5);
  double n = pow(x,y);
  x = double_interval(- 5.,- 0.5);
  y = double_interval(- 0.875,- 0.125);
  if (nondet) {
    pow(x,y);
    Frama_C_show_each_unreachable();
  }
  y = double_interval(- 0.25,0.25);
  double o = pow(x,y);
  y = double_interval(10.,11.5);
  double p = pow(x,y);
  y = double_interval(- 9876.5,1234.5);
  double q = pow(x,y);
  x = double_interval(1e10,1e11);
  y = double_interval(1e14,1e15);
  if (nondet) {
    pow(x,y);
    Frama_C_show_each_unreachable();
  }
  x = double_interval(- 1e11,- 1e10);
  y = double_interval(1e14,1e15);
  if (nondet) {
    pow(x,y);
    Frama_C_show_each_unreachable();
  }
  y = double_interval(- 0.5,9.5);
  double r = pow(10.0,y);
  return;
}

void test_powf_singleton_exp(void)
{
  float f32__x;
  double tmp;
  double tmp_0;
  double tmp_5;
  double tmp_7;
  double tmp_9;
  double tmp_11;
  double tmp_15;
  double tmp_21;
  tmp = double_interval(- 3.5,- 2.75);
  f32__x = (float)tmp;
  if (nondet) {
    powf(f32__x,(float)1.5);
    Frama_C_show_each_unreachable();
  }
  if (nondet) {
    powf(f32__x,(float)(- 1.5));
    Frama_C_show_each_unreachable();
  }
  tmp_0 = double_interval(- 3.5,2.75);
  f32__x = (float)tmp_0;
  float f32__c = powf(f32__x,(float)1.5);
  float f32__d = powf(f32__x,(float)(- 1.5));
  float f32__e = powf(f32__x,(float)(- 3.));
  float f32__f = powf(f32__x,(float)(- 2.));
  tmp_5 = double_interval((double)(1LL << 20),(double)(1LL << 21));
  f32__x = (float)tmp_5;
  float f32__g = powf(f32__x,(float)5.8);
  tmp_7 = double_interval((double)(- (1LL << 49)),- .75);
  f32__x = (float)tmp_7;
  float f32__h = powf(f32__x,(float)23.0);
  tmp_9 = double_interval(0.125,0.25);
  f32__x = (float)tmp_9;
  float f32__i = powf(f32__x,(float)60.);
  Frama_C_show_each_i(f32__i);
  tmp_11 = double_interval(1.25,2.0);
  f32__x = (float)tmp_11;
  float f32__j = powf(f32__x,(float)(- 1024.));
  Frama_C_show_each_j(f32__j);
  float f32__k = powf(f32__x,(float)2.5);
  float f32__l = powf(f32__x,(float)3.5);
  tmp_15 = double_interval(0.25,4.125);
  f32__x = (float)tmp_15;
  float f32__m = powf(f32__x,(float)(- 2.25));
  float f32__n = powf(f32__x,(float)(- 1.5));
  float f32__o = powf(f32__x,(float)0.25);
  float f32__p = powf(f32__x,(float)1.625);
  float f32__q = powf(f32__x,(float)4.);
  tmp_21 = double_interval(- 3.5,- 0.125);
  f32__x = (float)tmp_21;
  float f32__r = powf(f32__x,(float)(- 2.));
  float f32__s = powf(f32__x,(float)(- 1.));
  return;
}

void test_powf(void)
{
  float f32__x;
  float f32__y;
  double tmp;
  double tmp_1;
  double tmp_3;
  double tmp_5;
  double tmp_6;
  double tmp_8;
  double tmp_10;
  double tmp_12;
  double tmp_13;
  double tmp_15;
  double tmp_16;
  double tmp_18;
  double tmp_19;
  double tmp_21;
  double tmp_22;
  double tmp_24;
  double tmp_25;
  double tmp_27;
  double tmp_28;
  double tmp_30;
  double tmp_31;
  tmp = double_interval(- 18.5,12.125);
  f32__y = (float)tmp;
  float f32__a = powf((float)1.0,f32__y);
  tmp_1 = double_interval(- 15.25,32.75);
  f32__x = (float)tmp_1;
  float f32__b = powf(f32__x,(float)0.0);
  tmp_3 = double_interval(- 0.0,0.0);
  f32__y = (float)tmp_3;
  float f32__c = powf(f32__x,f32__y);
  tmp_5 = double_interval(- 4.0,7.5);
  f32__x = (float)tmp_5;
  tmp_6 = double_interval(2.125,2.875);
  f32__y = (float)tmp_6;
  float f32__d = powf(f32__x,f32__y);
  tmp_8 = double_interval(2.125,4.875);
  f32__y = (float)tmp_8;
  float f32__e = powf(f32__x,f32__y);
  tmp_10 = double_interval(2.0,3.0);
  f32__y = (float)tmp_10;
  float f32__f = powf(f32__x,f32__y);
  tmp_12 = double_interval(- 0.75,- 0.);
  f32__y = (float)tmp_12;
  tmp_13 = double_interval(0.125,7.5);
  f32__x = (float)tmp_13;
  float f32__g = powf(f32__x,f32__y);
  tmp_15 = double_interval(0.25,2.5);
  f32__y = (float)tmp_15;
  tmp_16 = double_interval(0.5,1.25);
  f32__x = (float)tmp_16;
  float f32__h = powf(f32__x,f32__y);
  tmp_18 = double_interval(- 1.0,1.0);
  f32__x = (float)tmp_18;
  tmp_19 = double_interval(- 1.0,1.0);
  f32__y = (float)tmp_19;
  float f32__i = powf(f32__x,f32__y);
  tmp_21 = double_interval(- 1.0,1.0);
  f32__x = (float)tmp_21;
  tmp_22 = double_interval(- 0.5,1.0);
  f32__y = (float)tmp_22;
  float f32__j = powf(f32__x,f32__y);
  tmp_24 = double_interval(- 13.,430.);
  f32__x = (float)tmp_24;
  tmp_25 = double_interval(3.,6.);
  f32__y = (float)tmp_25;
  float f32__k = powf(f32__x,f32__y);
  tmp_27 = double_interval(- 4.,- 2.);
  f32__x = (float)tmp_27;
  tmp_28 = double_interval(3.,5.);
  f32__y = (float)tmp_28;
  float f32__l = powf(f32__x,f32__y);
  tmp_30 = double_interval(- 0.,10.);
  f32__x = (float)tmp_30;
  tmp_31 = double_interval(- 0.,5.);
  f32__y = (float)tmp_31;
  float f32__m = powf(f32__x,f32__y);
  return;
}

void test_fmod_det(void)
{
  double a = fmod(4.0,2.25);
  double b = fmod(- 4.0,2.25);
  double c = fmod(- 0.0,2.25);
  double d = fmod(0.0,2.25);
  double e = fmod(0.0,0.0009765625);
  double f = fmod(1.25,0.0009765625);
  if (nondet) {
    fmod(0.125,0.0);
    Frama_C_show_each_unreachable();
  }
  return;
}

void test_fmod(void)
{
  double x;
  double y;
  double tmp_18;
  x = double_interval(2.,9.5);
  double a = fmod(x,1.5);
  double b = fmod(x,- 1.5);
  double c = fmod(- x,1.5);
  double d = fmod(- x,- 1.5);
  x = double_interval(.75,1.25);
  double e = fmod(x,1.5);
  double f = fmod(x,- 1.5);
  x = double_interval(4.,5.5);
  y = double_interval(6.5,8.);
  double g = fmod(x,y);
  x = double_interval(6.5,8.);
  y = double_interval(4.,5.5);
  double h = fmod(x,y);
  double i = fmod(x,- y);
  x = double_interval(- 9.,8.75);
  y = double_interval(- 2.,4.5);
  double j = fmod(x,y);
  x = double_interval(- 2.,4.5);
  y = double_interval(- 9.,8.75);
  double k = fmod(x,y);
  y = double_interval(- 0.0,0.0);
  if (nondet) {
    fmod(x,y);
    Frama_C_show_each_unreachable();
  }
  y = double_interval(0.0,0.125);
  double l = fmod(x,y);
  y = double_interval(- 0.125,- 0.0);
  double m = fmod(x,y);
  x = double_interval(1e308,1.1e308);
  double n = fmod(x,0.001953125);
  x = double_interval(- 1.1e308,- 1e308);
  double o = fmod(x,0.001953125);
  x = double_interval(1e308,1.00001e308);
  double p = fmod(x,0.001953125);
  x = double_interval(1.600000000000001e11,1.600000000000005e11);
  double q = fmod(x,0.001953125);
  x = double_interval(1.759218604000011e13,1759218604000015e13);
  double r = fmod(x,0.00195313);
  x = double_interval(0.5,0.505);
  double s = fmod(x,0.1);
  tmp_18 = double_interval(0.5,0.505);
  x = - tmp_18;
  double t = fmod(x,0.1);
  x = double_interval((double)(-8),- 6.5);
  double u = fmod(x,(double)4);
  x = double_interval((double)6,(double)7);
  y = double_interval((double)(-5),(double)(-4));
  double v1 = fmod(x,y);
  y = double_interval((double)4,(double)5);
  double v2 = fmod(x,y);
  x = double_interval((double)(-7),(double)(-6));
  double v3 = fmod(x,y);
  y = double_interval((double)(-5),(double)(-4));
  double v4 = fmod(x,y);
  x = double_interval((double)2,(double)3);
  y = double_interval((double)(-4),(double)5);
  double w1 = fmod(x,y);
  x = double_interval((double)(-2),(double)3);
  double w2 = fmod(x,y);
  x = double_interval((double)(-3),(double)2);
  double w3 = fmod(x,y);
  return;
}

void test_sqrt_det(void)
{
  double a = sqrt(42.125);
  double b = sqrt(0.125);
  if (nondet) {
    sqrt(- 2.);
    Frama_C_show_each_unreachable();
  }
  double c = sqrt(0.);
  double d = sqrt(- 0.);
  return;
}

void test_sqrt(void)
{
  double x = double_interval(- 0.0,5.0);
  double a = sqrt(x);
  x = double_interval(- 6.5,0.0);
  double b = sqrt(x);
  x = double_interval(- 6.5,- 0.0);
  double c = sqrt(x);
  x = double_interval(- 6.5,- 0.1);
  if (nondet) {
    sqrt(x);
    Frama_C_show_each_unreachable();
  }
  return;
}

void test_sqrtf_det(void)
{
  float f32__a = sqrtf((float)42.125);
  float f32__b = sqrtf((float)0.125);
  if (nondet) {
    sqrtf((float)(- 2.));
    Frama_C_show_each_unreachable();
  }
  float f32__c = sqrtf((float)0.);
  float f32__d = sqrtf((float)(- 0.));
  return;
}

void test_sqrtf(void)
{
  double tmp;
  double tmp_1;
  double tmp_3;
  double tmp_5;
  tmp = double_interval(- 0.0,5.0);
  float f32__x = (float)tmp;
  float f32__a = sqrtf(f32__x);
  tmp_1 = double_interval(- 6.5,0.0);
  f32__x = (float)tmp_1;
  float b = sqrtf(f32__x);
  tmp_3 = double_interval(- 6.5,- 0.0);
  f32__x = (float)tmp_3;
  float c = sqrtf(f32__x);
  tmp_5 = double_interval(- 6.5,- 0.1);
  f32__x = (float)tmp_5;
  if (nondet) {
    sqrt((double)f32__x);
    Frama_C_show_each_unreachable();
  }
  return;
}

void test_exp_det(void)
{
  double a = exp(42.125);
  double b = exp(- 2.);
  double c = exp(0.);
  double d = exp(- 0.);
  double e = exp(- 1.);
  if (nondet) {
    exp(1e100);
    Frama_C_show_each_unreachable();
  }
  return;
}

void test_expf_det(void)
{
  float f32__a = expf((float)42.125);
  float f32__b = expf((float)(- 2.));
  float f32__c = expf((float)0.);
  float f32__d = expf((float)(- 0.));
  float f32__e = expf((float)(- 1.));
  return;
}

void test_log_det(void)
{
  double a = log(42.125);
  double b = log(0.125);
  if (nondet) {
    log(- 2.);
    Frama_C_show_each_unreachable();
  }
  if (nondet) {
    log(0.);
    Frama_C_show_each_unreachable();
  }
  if (nondet) {
    log(- 0.);
    Frama_C_show_each_unreachable();
  }
  if (nondet) {
    log(- 1.);
    Frama_C_show_each_unreachable();
  }
  return;
}

void test_logf_det(void)
{
  float f32__a = logf((float)42.125);
  float f32__b = logf((float)0.125);
  if (nondet) {
    logf((float)(- 2.));
    Frama_C_show_each_unreachable();
  }
  if (nondet) {
    logf((float)0.);
    Frama_C_show_each_unreachable();
  }
  if (nondet) {
    logf((float)(- 0.));
    Frama_C_show_each_unreachable();
  }
  if (nondet) {
    logf((float)(- 1.));
    Frama_C_show_each_unreachable();
  }
  return;
}

void test_log10_det(void)
{
  double a = log10(42.125);
  double b = log10(0.125);
  if (nondet) {
    log10(- 2.);
    Frama_C_show_each_unreachable();
  }
  if (nondet) {
    log10(0.);
    Frama_C_show_each_unreachable();
  }
  if (nondet) {
    log10(- 0.);
    Frama_C_show_each_unreachable();
  }
  if (nondet) {
    log10(- 1.);
    Frama_C_show_each_unreachable();
  }
  return;
}

void test_log10f_det(void)
{
  float f32__a = log10f((float)42.125);
  float f32__b = log10f((float)0.125);
  if (nondet) {
    log10f((float)(- 2.));
    Frama_C_show_each_unreachable();
  }
  if (nondet) {
    log10f((float)0.);
    Frama_C_show_each_unreachable();
  }
  if (nondet) {
    log10f((float)(- 0.));
    Frama_C_show_each_unreachable();
  }
  if (nondet) {
    log10f((float)(- 1.));
    Frama_C_show_each_unreachable();
  }
  return;
}

void test_diff_pow_powf(void)
{
  double d = pow(0.11,30.);
  float f32__f = powf((float)0.11,(float)30.);
  return;
}

void test_floor_det(void)
{
  double a = floor(1.5);
  double b = floor(0.5);
  double c = floor(0.0);
  double d = floor(- 0.0);
  double e = floor(- 0.5);
  double f = floor(- 1.5);
  return;
}

void test_ceil_det(void)
{
  double a = ceil(1.5);
  double b = ceil(0.5);
  double c = ceil(0.0);
  double d = ceil(- 0.0);
  double e = ceil(- 0.5);
  double f = ceil(- 1.5);
  return;
}

void test_trunc_det(void)
{
  double a = trunc(1.5);
  double b = trunc(0.5);
  double c = trunc(0.0);
  double d = trunc(- 0.0);
  double e = trunc(- 0.5);
  double f = trunc(- 1.5);
  return;
}

void test_round_det(void)
{
  double a = round(1.5);
  double b = round(0.5);
  double c = round(0.0);
  double d = round(- 0.0);
  double e = round(- 0.5);
  double f = round(- 1.5);
  return;
}

void test_floor(void)
{
  double x;
  x = double_interval(- 0.5,1.5);
  double a = floor(x);
  x = double_interval(- 0.0,0.5);
  double b = floor(x);
  x = double_interval(- 2.5,- 0.5);
  double c = floor(x);
  return;
}

void test_ceil(void)
{
  double x;
  x = double_interval(- 0.5,1.5);
  double a = ceil(x);
  x = double_interval(- 0.0,0.5);
  double b = ceil(x);
  x = double_interval(- 2.5,- 0.5);
  double c = ceil(x);
  return;
}

void test_trunc(void)
{
  double x;
  x = double_interval(- 0.5,1.5);
  double a = trunc(x);
  x = double_interval(- 0.0,0.5);
  double b = trunc(x);
  x = double_interval(- 2.5,- 0.5);
  double c = trunc(x);
  return;
}

void test_round(void)
{
  double x;
  x = double_interval(- 0.5,1.5);
  double a = round(x);
  x = double_interval(- 0.0,0.5);
  double b = round(x);
  x = double_interval(- 2.5,- 0.5);
  double c = round(x);
  return;
}

void test_floorf_det(void)
{
  float f32__a = floorf((float)1.5);
  float f32__b = floorf((float)0.5);
  float f32__c = floorf((float)0.0);
  float f32__d = floorf((float)(- 0.0));
  float f32__e = floorf((float)(- 0.5));
  float f32__f = floorf((float)(- 1.5));
  return;
}

void test_ceilf_det(void)
{
  float f32__a = ceilf((float)1.5);
  float f32__b = ceilf((float)0.5);
  float f32__c = ceilf((float)0.0);
  float f32__d = ceilf((float)(- 0.0));
  float f32__e = ceilf((float)(- 0.5));
  float f32__f = ceilf((float)(- 1.5));
  return;
}

void test_truncf_det(void)
{
  float f32__a = truncf((float)1.5);
  float f32__b = truncf((float)0.5);
  float f32__c = truncf((float)0.0);
  float f32__d = truncf((float)(- 0.0));
  float f32__e = truncf((float)(- 0.5));
  float f32__f = truncf((float)(- 1.5));
  return;
}

void test_roundf_det(void)
{
  float f32__a = roundf((float)1.5);
  float f32__b = roundf((float)0.5);
  float f32__c = roundf((float)0.0);
  float f32__d = roundf((float)(- 0.0));
  float f32__e = roundf((float)(- 0.5));
  float f32__f = roundf((float)(- 1.5));
  return;
}

void test_floorf(void)
{
  float f32__x;
  double tmp;
  double tmp_1;
  double tmp_3;
  tmp = double_interval(- 0.5,1.5);
  f32__x = (float)tmp;
  float f32__a = floorf(f32__x);
  tmp_1 = double_interval(- 0.0,0.5);
  f32__x = (float)tmp_1;
  float f32__b = floorf(f32__x);
  tmp_3 = double_interval(- 2.5,- 0.5);
  f32__x = (float)tmp_3;
  float f32__c = floorf(f32__x);
  return;
}

void test_ceilf(void)
{
  float f32__x;
  double tmp;
  double tmp_1;
  double tmp_3;
  tmp = double_interval(- 0.5,1.5);
  f32__x = (float)tmp;
  float f32__a = ceilf(f32__x);
  tmp_1 = double_interval(- 0.0,0.5);
  f32__x = (float)tmp_1;
  float f32__b = ceilf(f32__x);
  tmp_3 = double_interval(- 2.5,- 0.5);
  f32__x = (float)tmp_3;
  float f32__c = ceilf(f32__x);
  return;
}

void test_truncf(void)
{
  float f32__x;
  double tmp;
  double tmp_1;
  double tmp_3;
  tmp = double_interval(- 0.5,1.5);
  f32__x = (float)tmp;
  float f32__a = truncf(f32__x);
  tmp_1 = double_interval(- 0.0,0.5);
  f32__x = (float)tmp_1;
  float f32__b = truncf(f32__x);
  tmp_3 = double_interval(- 2.5,- 0.5);
  f32__x = (float)tmp_3;
  float f32__c = truncf(f32__x);
  return;
}

void test_roundf(void)
{
  float f32__x;
  double tmp;
  double tmp_1;
  double tmp_3;
  tmp = double_interval(- 0.5,1.5);
  f32__x = (float)tmp;
  float f32__a = roundf(f32__x);
  tmp_1 = double_interval(- 0.0,0.5);
  f32__x = (float)tmp_1;
  float f32__b = roundf(f32__x);
  tmp_3 = double_interval(- 2.5,- 0.5);
  f32__x = (float)tmp_3;
  float f32__c = roundf(f32__x);
  return;
}

int main(void)
{
  int __retres;
  test_cos_det();
  test_sin_det();
  test_atan2_det();
  test_atan2();
  test_pow_det();
  test_pow_singleton_exp();
  test_pow();
  test_fmod_det();
  test_fmod();
  test_sqrt_det();
  test_sqrt();
  test_exp_det();
  test_log_det();
  test_log10_det();
  test_powf_det();
  test_powf_singleton_exp();
  test_powf();
  test_sqrtf_det();
  test_sqrtf();
  test_expf_det();
  test_logf_det();
  test_log10f_det();
  test_diff_pow_powf();
  test_floor_det();
  test_ceil_det();
  test_trunc_det();
  test_round_det();
  test_floor();
  test_ceil();
  test_trunc();
  test_round();
  test_floorf_det();
  test_ceilf_det();
  test_truncf_det();
  test_roundf_det();
  test_floorf();
  test_ceilf();
  test_truncf();
  test_roundf();
  __retres = 0;
  return __retres;
}


